<!DOCTYPE html><html lang="en"><head><meta charset="utf-8"/><meta name="viewport" content="width=device-width, initial-scale=1.0"/><meta name="description" content="The CDN for everything on npm"/><link rel="icon" type="image/jpeg" href="/favicon.jpg"/><link rel="stylesheet" href="https://app.unpkg.com/_assets/styles-D6XP7YEC.css"/><link rel="stylesheet" href="https://app.unpkg.com/_assets/code-light-B2LHUSJR.css"/><script type="importmap">{"imports":{"preact":"https://unpkg.com/preact@10.25.4/dist/preact.module.js","preact/hooks":"https://unpkg.com/preact@10.25.4/hooks/dist/hooks.module.js","preact/jsx-runtime":"https://unpkg.com/preact@10.25.4/jsx-runtime/dist/jsxRuntime.module.js"}}</script><script type="module" src="https://app.unpkg.com/_assets/scripts-5LWG6LQM.js" defer></script><title>UNPKG</title><script async src="https://www.googletagmanager.com/gtag/js?id=UA-140352188-1"></script><script>window.dataLayer = window.dataLayer || [];
function gtag(){dataLayer.push(arguments);}
gtag('js', new Date());
gtag('config', 'UA-140352188-1');</script></head><body><header class="border-b border-slate-300 bg-slate-100 text-slate-950"><div class="p-4 mx-auto flex justify-between items-center lg:max-w-screen-xl"><h1 class="text-2xl font-bold inline-block"><a href="https://unpkg.com">UNPKG</a></h1><span class="inline-block h-full"><a href="https://github.com/unpkg"><svg aria-hidden="true" fill="currentColor" viewBox="0 0 24 24" class="w-6 h-6"><path fill-rule="evenodd" d="M12.006 2a9.847 9.847 0 0 0-6.484 2.44 10.32 10.32 0 0 0-3.393 6.17 10.48 10.48 0 0 0 1.317 6.955 10.045 10.045 0 0 0 5.4 4.418c.504.095.683-.223.683-.494 0-.245-.01-1.052-.014-1.908-2.78.62-3.366-1.21-3.366-1.21a2.711 2.711 0 0 0-1.11-1.5c-.907-.637.07-.621.07-.621.317.044.62.163.885.346.266.183.487.426.647.71.135.253.318.476.538.655a2.079 2.079 0 0 0 2.37.196c.045-.52.27-1.006.635-1.37-2.219-.259-4.554-1.138-4.554-5.07a4.022 4.022 0 0 1 1.031-2.75 3.77 3.77 0 0 1 .096-2.713s.839-.275 2.749 1.05a9.26 9.26 0 0 1 5.004 0c1.906-1.325 2.74-1.05 2.74-1.05.37.858.406 1.828.101 2.713a4.017 4.017 0 0 1 1.029 2.75c0 3.939-2.339 4.805-4.564 5.058a2.471 2.471 0 0 1 .679 1.897c0 1.372-.012 2.477-.012 2.814 0 .272.18.592.687.492a10.05 10.05 0 0 0 5.388-4.421 10.473 10.473 0 0 0 1.313-6.948 10.32 10.32 0 0 0-3.39-6.165A9.847 9.847 0 0 0 12.007 2Z" clip-rule="evenodd"></path></svg></a></span></div></header><main class="px-4 pb-24 mx-auto lg:max-w-screen-xl lg:pb-44"><header class="pt-6 pb-4 lg:pt-16"><div class="mb-6 flex justify-between items-center"><h1 class="text-black text-3xl leading-tight font-semibold">gridjs</h1><div class="text-right w-48"><span>Version: </span><span data-hydrate="{&quot;key&quot;:&quot;VersionSelector&quot;,&quot;props&quot;:{&quot;availableTags&quot;:{&quot;latest&quot;:&quot;6.2.0&quot;},&quot;availableVersions&quot;:[&quot;6.2.0&quot;,&quot;6.1.1&quot;,&quot;6.1.0&quot;,&quot;6.0.6&quot;,&quot;6.0.5&quot;,&quot;6.0.4&quot;,&quot;6.0.3&quot;,&quot;6.0.2&quot;,&quot;6.0.1&quot;,&quot;6.0.0&quot;,&quot;5.1.0&quot;,&quot;5.0.2&quot;,&quot;5.0.1&quot;,&quot;5.0.0&quot;,&quot;4.0.0&quot;,&quot;3.4.0&quot;,&quot;3.3.0&quot;,&quot;3.2.2&quot;,&quot;3.2.1&quot;,&quot;3.2.0&quot;,&quot;3.1.0&quot;,&quot;3.0.2&quot;,&quot;3.0.1&quot;,&quot;3.0.0-alpha.2&quot;,&quot;3.0.0-alpha.1&quot;,&quot;2.1.0&quot;,&quot;2.0.0&quot;,&quot;1.17.0&quot;,&quot;1.16.0&quot;,&quot;1.15.4&quot;,&quot;1.15.3&quot;,&quot;1.15.2&quot;,&quot;1.15.1&quot;,&quot;1.15.0&quot;,&quot;1.14.0&quot;,&quot;1.13.0&quot;,&quot;1.12.0&quot;,&quot;1.11.0&quot;,&quot;1.10.0&quot;,&quot;1.9.0&quot;,&quot;1.8.1&quot;,&quot;1.8.0&quot;,&quot;1.7.0&quot;,&quot;1.6.3&quot;,&quot;1.6.2&quot;,&quot;1.6.1&quot;,&quot;1.6.0&quot;,&quot;1.5.1&quot;,&quot;1.5.0&quot;,&quot;1.4.3&quot;,&quot;1.4.2&quot;,&quot;1.4.1&quot;,&quot;1.4.0&quot;,&quot;1.3.0&quot;,&quot;1.2.1&quot;,&quot;1.2.0&quot;,&quot;1.1.2&quot;,&quot;1.1.1&quot;,&quot;1.1.0&quot;,&quot;1.0.2&quot;,&quot;1.0.1&quot;,&quot;1.0.0&quot;,&quot;0.2.2&quot;,&quot;0.2.1&quot;,&quot;0.2.0&quot;,&quot;0.1.12&quot;,&quot;0.1.11&quot;,&quot;0.1.10&quot;,&quot;0.1.9&quot;,&quot;0.1.8&quot;,&quot;0.1.7&quot;,&quot;0.1.6&quot;,&quot;0.1.5&quot;,&quot;0.1.4&quot;,&quot;0.1.3&quot;,&quot;0.1.0&quot;],&quot;currentVersion&quot;:&quot;6.2.0&quot;,&quot;pathnameFormat&quot;:&quot;/gridjs@%s/files/dist/gridjs.js.map&quot;,&quot;class&quot;:&quot;w-28 p-1 border border-slate-300 bg-slate-100 text-sm&quot;}}"><select name="version" class="w-28 p-1 border border-slate-300 bg-slate-100 text-sm"><optgroup label="Tags"><option selected value="6.2.0">latest (6.2.0)</option></optgroup><optgroup label="Versions"><option selected value="6.2.0">6.2.0</option><option value="6.1.1">6.1.1</option><option value="6.1.0">6.1.0</option><option value="6.0.6">6.0.6</option><option value="6.0.5">6.0.5</option><option value="6.0.4">6.0.4</option><option value="6.0.3">6.0.3</option><option value="6.0.2">6.0.2</option><option value="6.0.1">6.0.1</option><option value="6.0.0">6.0.0</option><option value="5.1.0">5.1.0</option><option value="5.0.2">5.0.2</option><option value="5.0.1">5.0.1</option><option value="5.0.0">5.0.0</option><option value="4.0.0">4.0.0</option><option value="3.4.0">3.4.0</option><option value="3.3.0">3.3.0</option><option value="3.2.2">3.2.2</option><option value="3.2.1">3.2.1</option><option value="3.2.0">3.2.0</option><option value="3.1.0">3.1.0</option><option value="3.0.2">3.0.2</option><option value="3.0.1">3.0.1</option><option value="3.0.0-alpha.2">3.0.0-alpha.2</option><option value="3.0.0-alpha.1">3.0.0-alpha.1</option><option value="2.1.0">2.1.0</option><option value="2.0.0">2.0.0</option><option value="1.17.0">1.17.0</option><option value="1.16.0">1.16.0</option><option value="1.15.4">1.15.4</option><option value="1.15.3">1.15.3</option><option value="1.15.2">1.15.2</option><option value="1.15.1">1.15.1</option><option value="1.15.0">1.15.0</option><option value="1.14.0">1.14.0</option><option value="1.13.0">1.13.0</option><option value="1.12.0">1.12.0</option><option value="1.11.0">1.11.0</option><option value="1.10.0">1.10.0</option><option value="1.9.0">1.9.0</option><option value="1.8.1">1.8.1</option><option value="1.8.0">1.8.0</option><option value="1.7.0">1.7.0</option><option value="1.6.3">1.6.3</option><option value="1.6.2">1.6.2</option><option value="1.6.1">1.6.1</option><option value="1.6.0">1.6.0</option><option value="1.5.1">1.5.1</option><option value="1.5.0">1.5.0</option><option value="1.4.3">1.4.3</option><option value="1.4.2">1.4.2</option><option value="1.4.1">1.4.1</option><option value="1.4.0">1.4.0</option><option value="1.3.0">1.3.0</option><option value="1.2.1">1.2.1</option><option value="1.2.0">1.2.0</option><option value="1.1.2">1.1.2</option><option value="1.1.1">1.1.1</option><option value="1.1.0">1.1.0</option><option value="1.0.2">1.0.2</option><option value="1.0.1">1.0.1</option><option value="1.0.0">1.0.0</option><option value="0.2.2">0.2.2</option><option value="0.2.1">0.2.1</option><option value="0.2.0">0.2.0</option><option value="0.1.12">0.1.12</option><option value="0.1.11">0.1.11</option><option value="0.1.10">0.1.10</option><option value="0.1.9">0.1.9</option><option value="0.1.8">0.1.8</option><option value="0.1.7">0.1.7</option><option value="0.1.6">0.1.6</option><option value="0.1.5">0.1.5</option><option value="0.1.4">0.1.4</option><option value="0.1.3">0.1.3</option><option value="0.1.0">0.1.0</option></optgroup></select></span></div></div><div class="mt-2"><p class="mb-3 leading-tight"><span>Advanced table plugin</span></p><div class="lg:hidden"><p class="mt-1 text-sm leading-4"><a href="https://gridjs.io/" title="Visit the gridjs website" class="inline-flex items-center hover:text-slate-950 hover:underline"><svg aria-hidden="true" fill="none" viewBox="0 0 24 24" class="w-6 h-6"><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13.213 9.787a3.391 3.391 0 0 0-4.795 0l-3.425 3.426a3.39 3.39 0 0 0 4.795 4.794l.321-.304m-.321-4.49a3.39 3.39 0 0 0 4.795 0l3.424-3.426a3.39 3.39 0 0 0-4.794-4.795l-1.028.961"></path></svg><span class="ml-1">gridjs.io</span></a></p><p class="mt-1 text-sm leading-4"><a href="https://github.com/grid-js/gridjs" title="View the gridjs repository on GitHub" class="inline-flex items-center hover:text-slate-950 hover:underline"><svg aria-hidden="true" fill="currentColor" viewBox="0 0 24 24" class="w-6 h-6"><path fill-rule="evenodd" d="M12.006 2a9.847 9.847 0 0 0-6.484 2.44 10.32 10.32 0 0 0-3.393 6.17 10.48 10.48 0 0 0 1.317 6.955 10.045 10.045 0 0 0 5.4 4.418c.504.095.683-.223.683-.494 0-.245-.01-1.052-.014-1.908-2.78.62-3.366-1.21-3.366-1.21a2.711 2.711 0 0 0-1.11-1.5c-.907-.637.07-.621.07-.621.317.044.62.163.885.346.266.183.487.426.647.71.135.253.318.476.538.655a2.079 2.079 0 0 0 2.37.196c.045-.52.27-1.006.635-1.37-2.219-.259-4.554-1.138-4.554-5.07a4.022 4.022 0 0 1 1.031-2.75 3.77 3.77 0 0 1 .096-2.713s.839-.275 2.749 1.05a9.26 9.26 0 0 1 5.004 0c1.906-1.325 2.74-1.05 2.74-1.05.37.858.406 1.828.101 2.713a4.017 4.017 0 0 1 1.029 2.75c0 3.939-2.339 4.805-4.564 5.058a2.471 2.471 0 0 1 .679 1.897c0 1.372-.012 2.477-.012 2.814 0 .272.18.592.687.492a10.05 10.05 0 0 0 5.388-4.421 10.473 10.473 0 0 0 1.313-6.948 10.32 10.32 0 0 0-3.39-6.165A9.847 9.847 0 0 0 12.007 2Z" clip-rule="evenodd"></path></svg><span class="ml-1">grid-js/gridjs</span></a></p></div></div></header><nav class="py-2"><span><a href="https://app.unpkg.com/gridjs@6.2.0" class="text-blue-600 hover:underline">gridjs</a></span><span> / </span><span><a href="https://app.unpkg.com/gridjs@6.2.0/files/dist" class="text-blue-600 hover:underline">dist</a></span><span> / </span><span>gridjs.js.map</span></nav><div class="p-3 border border-slate-300 bg-slate-100 text-sm flex justify-between select-none"><div class="w-64"><span><span>1 lines </span><span>â€¢ </span></span><span>200 kB</span></div><div class="hidden flex-grow sm:block text-center">Source Map (JSON)</div><div class="w-64 hidden sm:block text-right"><a href="https://unpkg.com/gridjs@6.2.0/dist/gridjs.js.map" class="py-1 px-2 border border-slate-300 bg-slate-100 hover:bg-slate-200 rounded-sm">View Raw</a></div></div><div data-hydrate="{&quot;key&quot;:&quot;CodeViewer&quot;,&quot;props&quot;:{&quot;html&quot;:&quot;{&amp;quot;version&amp;quot;:3,&amp;quot;file&amp;quot;:&amp;quot;gridjs.js&amp;quot;,&amp;quot;sources&amp;quot;:[&amp;quot;../src/types.ts&amp;quot;,&amp;quot;../node_modules/preact/dist/preact.module.js&amp;quot;,&amp;quot;../src/util/id.ts&amp;quot;,&amp;quot;../src/base.ts&amp;quot;,&amp;quot;../src/view/htmlElement.tsx&amp;quot;,&amp;quot;../src/util/html.ts&amp;quot;,&amp;quot;../src/cell.ts&amp;quot;,&amp;quot;../src/pipeline/processor.ts&amp;quot;,&amp;quot;../src/row.ts&amp;quot;,&amp;quot;../src/tabular.ts&amp;quot;,&amp;quot;../src/util/array.ts&amp;quot;,&amp;quot;../src/util/eventEmitter.ts&amp;quot;,&amp;quot;../src/util/deepEqual.ts&amp;quot;,&amp;quot;../src/pipeline/filter/globalSearch.ts&amp;quot;,&amp;quot;../src/operator/search.ts&amp;quot;,&amp;quot;../src/util/className.ts&amp;quot;,&amp;quot;../src/pipeline/filter/serverGlobalSearch.ts&amp;quot;,&amp;quot;../node_modules/preact/hooks/dist/hooks.module.js&amp;quot;,&amp;quot;../src/hooks/useConfig.ts&amp;quot;,&amp;quot;../src/i18n/en_US.ts&amp;quot;,&amp;quot;../src/i18n/language.ts&amp;quot;,&amp;quot;../src/view/plugin/search/actions.ts&amp;quot;,&amp;quot;../src/hooks/useStore.ts&amp;quot;,&amp;quot;../src/hooks/useSelector.ts&amp;quot;,&amp;quot;../src/view/plugin/search/search.tsx&amp;quot;,&amp;quot;../src/util/debounce.ts&amp;quot;,&amp;quot;../src/pipeline/limit/pagination.ts&amp;quot;,&amp;quot;../src/pipeline/limit/serverPagination.ts&amp;quot;,&amp;quot;../src/view/plugin/pagination.tsx&amp;quot;,&amp;quot;../src/util/width.ts&amp;quot;,&amp;quot;../src/view/table/shadow.tsx&amp;quot;,&amp;quot;../src/util/string.ts&amp;quot;,&amp;quot;../src/plugin.ts&amp;quot;,&amp;quot;../src/util/log.ts&amp;quot;,&amp;quot;../src/header.ts&amp;quot;,&amp;quot;../src/storage/storage.ts&amp;quot;,&amp;quot;../src/storage/memory.ts&amp;quot;,&amp;quot;../src/storage/server.ts&amp;quot;,&amp;quot;../src/storage/storageUtils.ts&amp;quot;,&amp;quot;../src/pipeline/pipeline.ts&amp;quot;,&amp;quot;../src/pipeline/extractor/storage.ts&amp;quot;,&amp;quot;../src/pipeline/transformer/arrayToTabular.ts&amp;quot;,&amp;quot;../src/pipeline/initiator/server.ts&amp;quot;,&amp;quot;../src/pipeline/transformer/storageResponseToArray.ts&amp;quot;,&amp;quot;../src/pipeline/pipelineUtils.ts&amp;quot;,&amp;quot;../src/state/store.ts&amp;quot;,&amp;quot;../src/config.ts&amp;quot;,&amp;quot;../src/view/table/td.tsx&amp;quot;,&amp;quot;../src/view/table/tr.tsx&amp;quot;,&amp;quot;../src/view/table/messageRow.tsx&amp;quot;,&amp;quot;../src/view/table/tbody.tsx&amp;quot;,&amp;quot;../src/pipeline/sort/native.ts&amp;quot;,&amp;quot;../src/view/plugin/sort/actions.ts&amp;quot;,&amp;quot;../src/pipeline/sort/server.ts&amp;quot;,&amp;quot;../src/view/plugin/sort/sort.tsx&amp;quot;,&amp;quot;../src/util/throttle.ts&amp;quot;,&amp;quot;../src/view/plugin/resize/resize.tsx&amp;quot;,&amp;quot;../src/view/table/th.tsx&amp;quot;,&amp;quot;../src/view/table/thead.tsx&amp;quot;,&amp;quot;../src/util/table.ts&amp;quot;,&amp;quot;../src/view/actions.ts&amp;quot;,&amp;quot;../src/view/table/table.tsx&amp;quot;,&amp;quot;../src/view/headerContainer.tsx&amp;quot;,&amp;quot;../src/view/footerContainer.tsx&amp;quot;,&amp;quot;../src/view/container.tsx&amp;quot;,&amp;quot;../src/grid.ts&amp;quot;],&amp;quot;sourcesContent&amp;quot;:[&amp;quot;import { ComponentChild } from &amp;apos;preact&amp;apos;;\\nimport Row from &amp;apos;./row&amp;apos;;\\nimport { SortConfig } from &amp;apos;./view/plugin/sort/sort&amp;apos;;\\nimport { JSXInternal } from &amp;apos;preact/src/jsx&amp;apos;;\\nimport { Plugin } from &amp;apos;./plugin&amp;apos;;\\n\\nexport type OneDArray&amp;lt;T&amp;gt; = T[];\\nexport type TwoDArray&amp;lt;T&amp;gt; = T[][];\\n\\n/**\\n * Table cell types\\n */\\nexport type TCell = number | string | boolean | ComponentChild | HTMLElement;\\n// Array of Arrays\\nexport type TDataArrayRow = OneDArray&amp;lt;TCell&amp;gt;;\\nexport type TDataArray = OneDArray&amp;lt;TDataArrayRow&amp;gt;;\\n// Array of Objects\\nexport type TDataObjectRow = { [key: string]: TCell };\\nexport type TDataObject = OneDArray&amp;lt;TDataObjectRow&amp;gt;;\\n// (Array of Arrays) and (Array of Objects)\\nexport type TData = TDataArray | TDataObject;\\n\\n// Table header cell type\\nexport interface TColumn {\\n  id?: string;\\n  // default data for all columns\\n  data?: ((row: TDataArrayRow | TDataObjectRow) =&amp;gt; TCell) | TCell;\\n  // column label\\n  name?: string | ComponentChild;\\n  plugin?: Plugin&amp;lt;any&amp;gt;;\\n  // column width\\n  width?: string;\\n  minWidth?: string;\\n  sort?: SortConfig;\\n  columns?: OneDArray&amp;lt;TColumn&amp;gt;;\\n  resizable?: boolean;\\n  hidden?: boolean;\\n  formatter?: (cell: TCell, row: Row, column: TColumn) =&amp;gt; ComponentChild;\\n  // HTML attributes to be added to all cells and header of this column\\n  attributes?:\\n    | ((\\n        // this is null when `attributes` is called for a th\\n        cell: TCell | null,\\n        row: Row | null,\\n        column: TColumn,\\n      ) =&amp;gt; JSXInternal.HTMLAttributes&amp;lt;HTMLTableCellElement&amp;gt;)\\n    | JSXInternal.HTMLAttributes&amp;lt;HTMLTableCellElement&amp;gt;;\\n}\\n\\n// Comparator function for the sorting plugin\\nexport type Comparator&amp;lt;T&amp;gt; = (a: T, b: T) =&amp;gt; number;\\n\\nexport interface TColumnSort {\\n  index: number;\\n  // 1 ascending, -1 descending\\n  direction?: 1 | -1;\\n}\\n\\n// container status\\nexport enum Status {\\n  Init,\\n  Loading,\\n  Loaded,\\n  Rendered,\\n  Error,\\n}\\n\\nexport type CSSDeclaration = {\\n  [key: string]: string | number;\\n};\\n&amp;quot;,&amp;quot;var n,l,u,i,t,o,r,f={},e=[],c=/acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;function s(n,l){for(var u in l)n[u]=l[u];return n}function a(n){var l=n.parentNode;l&amp;amp;&amp;amp;l.removeChild(n)}function h(l,u,i){var t,o,r,f={};for(r in u)\\&amp;quot;key\\&amp;quot;==r?t=u[r]:\\&amp;quot;ref\\&amp;quot;==r?o=u[r]:f[r]=u[r];if(arguments.length&amp;gt;2&amp;amp;&amp;amp;(f.children=arguments.length&amp;gt;3?n.call(arguments,2):i),\\&amp;quot;function\\&amp;quot;==typeof l&amp;amp;&amp;amp;null!=l.defaultProps)for(r in l.defaultProps)void 0===f[r]&amp;amp;&amp;amp;(f[r]=l.defaultProps[r]);return v(l,f,t,o,null)}function v(n,i,t,o,r){var f={type:n,props:i,key:t,ref:o,__k:null,__:null,__b:0,__e:null,__d:void 0,__c:null,__h:null,constructor:void 0,__v:null==r?++u:r};return null==r&amp;amp;&amp;amp;null!=l.vnode&amp;amp;&amp;amp;l.vnode(f),f}function y(){return{current:null}}function p(n){return n.children}function d(n,l){this.props=n,this.context=l}function _(n,l){if(null==l)return n.__?_(n.__,n.__.__k.indexOf(n)+1):null;for(var u;l&amp;lt;n.__k.length;l++)if(null!=(u=n.__k[l])&amp;amp;&amp;amp;null!=u.__e)return u.__e;return\\&amp;quot;function\\&amp;quot;==typeof n.type?_(n):null}function k(n){var l,u;if(null!=(n=n.__)&amp;amp;&amp;amp;null!=n.__c){for(n.__e=n.__c.base=null,l=0;l&amp;lt;n.__k.length;l++)if(null!=(u=n.__k[l])&amp;amp;&amp;amp;null!=u.__e){n.__e=n.__c.base=u.__e;break}return k(n)}}function b(n){(!n.__d&amp;amp;&amp;amp;(n.__d=!0)&amp;amp;&amp;amp;t.push(n)&amp;amp;&amp;amp;!g.__r++||o!==l.debounceRendering)&amp;amp;&amp;amp;((o=l.debounceRendering)||setTimeout)(g)}function g(){for(var n;g.__r=t.length;)n=t.sort(function(n,l){return n.__v.__b-l.__v.__b}),t=[],n.some(function(n){var l,u,i,t,o,r;n.__d&amp;amp;&amp;amp;(o=(t=(l=n).__v).__e,(r=l.__P)&amp;amp;&amp;amp;(u=[],(i=s({},t)).__v=t.__v+1,j(r,t,i,l.__n,void 0!==r.ownerSVGElement,null!=t.__h?[o]:null,u,null==o?_(t):o,t.__h),z(u,t),t.__e!=o&amp;amp;&amp;amp;k(t)))})}function w(n,l,u,i,t,o,r,c,s,a){var h,y,d,k,b,g,w,x=i&amp;amp;&amp;amp;i.__k||e,C=x.length;for(u.__k=[],h=0;h&amp;lt;l.length;h++)if(null!=(k=u.__k[h]=null==(k=l[h])||\\&amp;quot;boolean\\&amp;quot;==typeof k?null:\\&amp;quot;string\\&amp;quot;==typeof k||\\&amp;quot;number\\&amp;quot;==typeof k||\\&amp;quot;bigint\\&amp;quot;==typeof k?v(null,k,null,null,k):Array.isArray(k)?v(p,{children:k},null,null,null):k.__b&amp;gt;0?v(k.type,k.props,k.key,k.ref?k.ref:null,k.__v):k)){if(k.__=u,k.__b=u.__b+1,null===(d=x[h])||d&amp;amp;&amp;amp;k.key==d.key&amp;amp;&amp;amp;k.type===d.type)x[h]=void 0;else for(y=0;y&amp;lt;C;y++){if((d=x[y])&amp;amp;&amp;amp;k.key==d.key&amp;amp;&amp;amp;k.type===d.type){x[y]=void 0;break}d=null}j(n,k,d=d||f,t,o,r,c,s,a),b=k.__e,(y=k.ref)&amp;amp;&amp;amp;d.ref!=y&amp;amp;&amp;amp;(w||(w=[]),d.ref&amp;amp;&amp;amp;w.push(d.ref,null,k),w.push(y,k.__c||b,k)),null!=b?(null==g&amp;amp;&amp;amp;(g=b),\\&amp;quot;function\\&amp;quot;==typeof k.type&amp;amp;&amp;amp;k.__k===d.__k?k.__d=s=m(k,s,n):s=A(n,k,d,x,b,s),\\&amp;quot;function\\&amp;quot;==typeof u.type&amp;amp;&amp;amp;(u.__d=s)):s&amp;amp;&amp;amp;d.__e==s&amp;amp;&amp;amp;s.parentNode!=n&amp;amp;&amp;amp;(s=_(d))}for(u.__e=g,h=C;h--;)null!=x[h]&amp;amp;&amp;amp;N(x[h],x[h]);if(w)for(h=0;h&amp;lt;w.length;h++)M(w[h],w[++h],w[++h])}function m(n,l,u){for(var i,t=n.__k,o=0;t&amp;amp;&amp;amp;o&amp;lt;t.length;o++)(i=t[o])&amp;amp;&amp;amp;(i.__=n,l=\\&amp;quot;function\\&amp;quot;==typeof i.type?m(i,l,u):A(u,i,i,t,i.__e,l));return l}function x(n,l){return l=l||[],null==n||\\&amp;quot;boolean\\&amp;quot;==typeof n||(Array.isArray(n)?n.some(function(n){x(n,l)}):l.push(n)),l}function A(n,l,u,i,t,o){var r,f,e;if(void 0!==l.__d)r=l.__d,l.__d=void 0;else if(null==u||t!=o||null==t.parentNode)n:if(null==o||o.parentNode!==n)n.appendChild(t),r=null;else{for(f=o,e=0;(f=f.nextSibling)&amp;amp;&amp;amp;e&amp;lt;i.length;e+=1)if(f==t)break n;n.insertBefore(t,o),r=o}return void 0!==r?r:t.nextSibling}function C(n,l,u,i,t){var o;for(o in u)\\&amp;quot;children\\&amp;quot;===o||\\&amp;quot;key\\&amp;quot;===o||o in l||H(n,o,null,u[o],i);for(o in l)t&amp;amp;&amp;amp;\\&amp;quot;function\\&amp;quot;!=typeof l[o]||\\&amp;quot;children\\&amp;quot;===o||\\&amp;quot;key\\&amp;quot;===o||\\&amp;quot;value\\&amp;quot;===o||\\&amp;quot;checked\\&amp;quot;===o||u[o]===l[o]||H(n,o,l[o],u[o],i)}function $(n,l,u){\\&amp;quot;-\\&amp;quot;===l[0]?n.setProperty(l,u):n[l]=null==u?\\&amp;quot;\\&amp;quot;:\\&amp;quot;number\\&amp;quot;!=typeof u||c.test(l)?u:u+\\&amp;quot;px\\&amp;quot;}function H(n,l,u,i,t){var o;n:if(\\&amp;quot;style\\&amp;quot;===l)if(\\&amp;quot;string\\&amp;quot;==typeof u)n.style.cssText=u;else{if(\\&amp;quot;string\\&amp;quot;==typeof i&amp;amp;&amp;amp;(n.style.cssText=i=\\&amp;quot;\\&amp;quot;),i)for(l in i)u&amp;amp;&amp;amp;l in u||$(n.style,l,\\&amp;quot;\\&amp;quot;);if(u)for(l in u)i&amp;amp;&amp;amp;u[l]===i[l]||$(n.style,l,u[l])}else if(\\&amp;quot;o\\&amp;quot;===l[0]&amp;amp;&amp;amp;\\&amp;quot;n\\&amp;quot;===l[1])o=l!==(l=l.replace(/Capture$/,\\&amp;quot;\\&amp;quot;)),l=l.toLowerCase()in n?l.toLowerCase().slice(2):l.slice(2),n.l||(n.l={}),n.l[l+o]=u,u?i||n.addEventListener(l,o?T:I,o):n.removeEventListener(l,o?T:I,o);else if(\\&amp;quot;dangerouslySetInnerHTML\\&amp;quot;!==l){if(t)l=l.replace(/xlink(H|:h)/,\\&amp;quot;h\\&amp;quot;).replace(/sName$/,\\&amp;quot;s\\&amp;quot;);else if(\\&amp;quot;href\\&amp;quot;!==l&amp;amp;&amp;amp;\\&amp;quot;list\\&amp;quot;!==l&amp;amp;&amp;amp;\\&amp;quot;form\\&amp;quot;!==l&amp;amp;&amp;amp;\\&amp;quot;tabIndex\\&amp;quot;!==l&amp;amp;&amp;amp;\\&amp;quot;download\\&amp;quot;!==l&amp;amp;&amp;amp;l in n)try{n[l]=null==u?\\&amp;quot;\\&amp;quot;:u;break n}catch(n){}\\&amp;quot;function\\&amp;quot;==typeof u||(null==u||!1===u&amp;amp;&amp;amp;-1==l.indexOf(\\&amp;quot;-\\&amp;quot;)?n.removeAttribute(l):n.setAttribute(l,u))}}function I(n){this.l[n.type+!1](l.event?l.event(n):n)}function T(n){this.l[n.type+!0](l.event?l.event(n):n)}function j(n,u,i,t,o,r,f,e,c){var a,h,v,y,_,k,b,g,m,x,A,C,$,H,I,T=u.type;if(void 0!==u.constructor)return null;null!=i.__h&amp;amp;&amp;amp;(c=i.__h,e=u.__e=i.__e,u.__h=null,r=[e]),(a=l.__b)&amp;amp;&amp;amp;a(u);try{n:if(\\&amp;quot;function\\&amp;quot;==typeof T){if(g=u.props,m=(a=T.contextType)&amp;amp;&amp;amp;t[a.__c],x=a?m?m.props.value:a.__:t,i.__c?b=(h=u.__c=i.__c).__=h.__E:(\\&amp;quot;prototype\\&amp;quot;in T&amp;amp;&amp;amp;T.prototype.render?u.__c=h=new T(g,x):(u.__c=h=new d(g,x),h.constructor=T,h.render=O),m&amp;amp;&amp;amp;m.sub(h),h.props=g,h.state||(h.state={}),h.context=x,h.__n=t,v=h.__d=!0,h.__h=[],h._sb=[]),null==h.__s&amp;amp;&amp;amp;(h.__s=h.state),null!=T.getDerivedStateFromProps&amp;amp;&amp;amp;(h.__s==h.state&amp;amp;&amp;amp;(h.__s=s({},h.__s)),s(h.__s,T.getDerivedStateFromProps(g,h.__s))),y=h.props,_=h.state,v)null==T.getDerivedStateFromProps&amp;amp;&amp;amp;null!=h.componentWillMount&amp;amp;&amp;amp;h.componentWillMount(),null!=h.componentDidMount&amp;amp;&amp;amp;h.__h.push(h.componentDidMount);else{if(null==T.getDerivedStateFromProps&amp;amp;&amp;amp;g!==y&amp;amp;&amp;amp;null!=h.componentWillReceiveProps&amp;amp;&amp;amp;h.componentWillReceiveProps(g,x),!h.__e&amp;amp;&amp;amp;null!=h.shouldComponentUpdate&amp;amp;&amp;amp;!1===h.shouldComponentUpdate(g,h.__s,x)||u.__v===i.__v){for(h.props=g,h.state=h.__s,u.__v!==i.__v&amp;amp;&amp;amp;(h.__d=!1),h.__v=u,u.__e=i.__e,u.__k=i.__k,u.__k.forEach(function(n){n&amp;amp;&amp;amp;(n.__=u)}),A=0;A&amp;lt;h._sb.length;A++)h.__h.push(h._sb[A]);h._sb=[],h.__h.length&amp;amp;&amp;amp;f.push(h);break n}null!=h.componentWillUpdate&amp;amp;&amp;amp;h.componentWillUpdate(g,h.__s,x),null!=h.componentDidUpdate&amp;amp;&amp;amp;h.__h.push(function(){h.componentDidUpdate(y,_,k)})}if(h.context=x,h.props=g,h.__v=u,h.__P=n,C=l.__r,$=0,\\&amp;quot;prototype\\&amp;quot;in T&amp;amp;&amp;amp;T.prototype.render){for(h.state=h.__s,h.__d=!1,C&amp;amp;&amp;amp;C(u),a=h.render(h.props,h.state,h.context),H=0;H&amp;lt;h._sb.length;H++)h.__h.push(h._sb[H]);h._sb=[]}else do{h.__d=!1,C&amp;amp;&amp;amp;C(u),a=h.render(h.props,h.state,h.context),h.state=h.__s}while(h.__d&amp;amp;&amp;amp;++$&amp;lt;25);h.state=h.__s,null!=h.getChildContext&amp;amp;&amp;amp;(t=s(s({},t),h.getChildContext())),v||null==h.getSnapshotBeforeUpdate||(k=h.getSnapshotBeforeUpdate(y,_)),I=null!=a&amp;amp;&amp;amp;a.type===p&amp;amp;&amp;amp;null==a.key?a.props.children:a,w(n,Array.isArray(I)?I:[I],u,i,t,o,r,f,e,c),h.base=u.__e,u.__h=null,h.__h.length&amp;amp;&amp;amp;f.push(h),b&amp;amp;&amp;amp;(h.__E=h.__=null),h.__e=!1}else null==r&amp;amp;&amp;amp;u.__v===i.__v?(u.__k=i.__k,u.__e=i.__e):u.__e=L(i.__e,u,i,t,o,r,f,c);(a=l.diffed)&amp;amp;&amp;amp;a(u)}catch(n){u.__v=null,(c||null!=r)&amp;amp;&amp;amp;(u.__e=e,u.__h=!!c,r[r.indexOf(e)]=null),l.__e(n,u,i)}}function z(n,u){l.__c&amp;amp;&amp;amp;l.__c(u,n),n.some(function(u){try{n=u.__h,u.__h=[],n.some(function(n){n.call(u)})}catch(n){l.__e(n,u.__v)}})}function L(l,u,i,t,o,r,e,c){var s,h,v,y=i.props,p=u.props,d=u.type,k=0;if(\\&amp;quot;svg\\&amp;quot;===d&amp;amp;&amp;amp;(o=!0),null!=r)for(;k&amp;lt;r.length;k++)if((s=r[k])&amp;amp;&amp;amp;\\&amp;quot;setAttribute\\&amp;quot;in s==!!d&amp;amp;&amp;amp;(d?s.localName===d:3===s.nodeType)){l=s,r[k]=null;break}if(null==l){if(null===d)return document.createTextNode(p);l=o?document.createElementNS(\\&amp;quot;http://www.w3.org/2000/svg\\&amp;quot;,d):document.createElement(d,p.is&amp;amp;&amp;amp;p),r=null,c=!1}if(null===d)y===p||c&amp;amp;&amp;amp;l.data===p||(l.data=p);else{if(r=r&amp;amp;&amp;amp;n.call(l.childNodes),h=(y=i.props||f).dangerouslySetInnerHTML,v=p.dangerouslySetInnerHTML,!c){if(null!=r)for(y={},k=0;k&amp;lt;l.attributes.length;k++)y[l.attributes[k].name]=l.attributes[k].value;(v||h)&amp;amp;&amp;amp;(v&amp;amp;&amp;amp;(h&amp;amp;&amp;amp;v.__html==h.__html||v.__html===l.innerHTML)||(l.innerHTML=v&amp;amp;&amp;amp;v.__html||\\&amp;quot;\\&amp;quot;))}if(C(l,p,y,o,c),v)u.__k=[];else if(k=u.props.children,w(l,Array.isArray(k)?k:[k],u,i,t,o&amp;amp;&amp;amp;\\&amp;quot;foreignObject\\&amp;quot;!==d,r,e,r?r[0]:i.__k&amp;amp;&amp;amp;_(i,0),c),null!=r)for(k=r.length;k--;)null!=r[k]&amp;amp;&amp;amp;a(r[k]);c||(\\&amp;quot;value\\&amp;quot;in p&amp;amp;&amp;amp;void 0!==(k=p.value)&amp;amp;&amp;amp;(k!==l.value||\\&amp;quot;progress\\&amp;quot;===d&amp;amp;&amp;amp;!k||\\&amp;quot;option\\&amp;quot;===d&amp;amp;&amp;amp;k!==y.value)&amp;amp;&amp;amp;H(l,\\&amp;quot;value\\&amp;quot;,k,y.value,!1),\\&amp;quot;checked\\&amp;quot;in p&amp;amp;&amp;amp;void 0!==(k=p.checked)&amp;amp;&amp;amp;k!==l.checked&amp;amp;&amp;amp;H(l,\\&amp;quot;checked\\&amp;quot;,k,y.checked,!1))}return l}function M(n,u,i){try{\\&amp;quot;function\\&amp;quot;==typeof n?n(u):n.current=u}catch(n){l.__e(n,i)}}function N(n,u,i){var t,o;if(l.unmount&amp;amp;&amp;amp;l.unmount(n),(t=n.ref)&amp;amp;&amp;amp;(t.current&amp;amp;&amp;amp;t.current!==n.__e||M(t,null,u)),null!=(t=n.__c)){if(t.componentWillUnmount)try{t.componentWillUnmount()}catch(n){l.__e(n,u)}t.base=t.__P=null,n.__c=void 0}if(t=n.__k)for(o=0;o&amp;lt;t.length;o++)t[o]&amp;amp;&amp;amp;N(t[o],u,i||\\&amp;quot;function\\&amp;quot;!=typeof n.type);i||null==n.__e||a(n.__e),n.__=n.__e=n.__d=void 0}function O(n,l,u){return this.constructor(n,u)}function P(u,i,t){var o,r,e;l.__&amp;amp;&amp;amp;l.__(u,i),r=(o=\\&amp;quot;function\\&amp;quot;==typeof t)?null:t&amp;amp;&amp;amp;t.__k||i.__k,e=[],j(i,u=(!o&amp;amp;&amp;amp;t||i).__k=h(p,null,[u]),r||f,f,void 0!==i.ownerSVGElement,!o&amp;amp;&amp;amp;t?[t]:r?null:i.firstChild?n.call(i.childNodes):null,e,!o&amp;amp;&amp;amp;t?t:r?r.__e:i.firstChild,o),z(e,u)}function S(n,l){P(n,l,S)}function q(l,u,i){var t,o,r,f=s({},l.props);for(r in u)\\&amp;quot;key\\&amp;quot;==r?t=u[r]:\\&amp;quot;ref\\&amp;quot;==r?o=u[r]:f[r]=u[r];return arguments.length&amp;gt;2&amp;amp;&amp;amp;(f.children=arguments.length&amp;gt;3?n.call(arguments,2):i),v(l.type,f,t||l.key,o||l.ref,null)}function B(n,l){var u={__c:l=\\&amp;quot;__cC\\&amp;quot;+r++,__:n,Consumer:function(n,l){return n.children(l)},Provider:function(n){var u,i;return this.getChildContext||(u=[],(i={})[l]=this,this.getChildContext=function(){return i},this.shouldComponentUpdate=function(n){this.props.value!==n.value&amp;amp;&amp;amp;u.some(b)},this.sub=function(n){u.push(n);var l=n.componentWillUnmount;n.componentWillUnmount=function(){u.splice(u.indexOf(n),1),l&amp;amp;&amp;amp;l.call(n)}}),n.children}};return u.Provider.__=u.Consumer.contextType=u}n=e.slice,l={__e:function(n,l,u,i){for(var t,o,r;l=l.__;)if((t=l.__c)&amp;amp;&amp;amp;!t.__)try{if((o=t.constructor)&amp;amp;&amp;amp;null!=o.getDerivedStateFromError&amp;amp;&amp;amp;(t.setState(o.getDerivedStateFromError(n)),r=t.__d),null!=t.componentDidCatch&amp;amp;&amp;amp;(t.componentDidCatch(n,i||{}),r=t.__d),r)return t.__E=t}catch(l){n=l}throw n}},u=0,i=function(n){return null!=n&amp;amp;&amp;amp;void 0===n.constructor},d.prototype.setState=function(n,l){var u;u=null!=this.__s&amp;amp;&amp;amp;this.__s!==this.state?this.__s:this.__s=s({},this.state),\\&amp;quot;function\\&amp;quot;==typeof n&amp;amp;&amp;amp;(n=n(s({},u),this.props)),n&amp;amp;&amp;amp;s(u,n),null!=n&amp;amp;&amp;amp;this.__v&amp;amp;&amp;amp;(l&amp;amp;&amp;amp;this._sb.push(l),b(this))},d.prototype.forceUpdate=function(n){this.__v&amp;amp;&amp;amp;(this.__e=!0,n&amp;amp;&amp;amp;this.__h.push(n),b(this))},d.prototype.render=p,t=[],g.__r=0,r=0;export{d as Component,p as Fragment,q as cloneElement,B as createContext,h as createElement,y as createRef,h,S as hydrate,i as isValidElement,l as options,P as render,x as toChildArray};\\n//# sourceMappingURL=preact.module.js.map\\n&amp;quot;,&amp;quot;export type ID = string;\\n\\nexport function generateUUID(): ID {\\n  return &amp;apos;xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx&amp;apos;.replace(/[xy]/g, function (c) {\\n    const r = (Math.random() * 16) | 0,\\n      v = c == &amp;apos;x&amp;apos; ? r : (r &amp;amp; 0x3) | 0x8;\\n    return v.toString(16);\\n  });\\n}\\n&amp;quot;,&amp;quot;import { generateUUID, ID } from &amp;apos;./util/id&amp;apos;;\\n\\nclass Base {\\n  private readonly _id: ID;\\n\\n  constructor(id?: ID) {\\n    this._id = id || generateUUID();\\n  }\\n\\n  get id(): ID {\\n    return this._id;\\n  }\\n}\\n\\nexport default Base;\\n&amp;quot;,&amp;quot;import { h } from &amp;apos;preact&amp;apos;;\\n\\nexport interface HTMLContentProps {\\n  content: string;\\n  parentElement?: string;\\n}\\n\\nexport function HTMLElement(props: HTMLContentProps) {\\n  return h(props.parentElement || &amp;apos;span&amp;apos;, {\\n    dangerouslySetInnerHTML: { __html: props.content },\\n  });\\n}\\n&amp;quot;,&amp;quot;import { h, VNode } from &amp;apos;preact&amp;apos;;\\nimport { HTMLElement } from &amp;apos;../view/htmlElement&amp;apos;;\\n\\nexport function decode(content: string): string {\\n  const value = new DOMParser().parseFromString(content, &amp;apos;text/html&amp;apos;);\\n  return value.documentElement.textContent;\\n}\\n\\nexport function html(content: string, parentElement?: string): VNode {\\n  return h(HTMLElement, { content: content, parentElement: parentElement });\\n}\\n&amp;quot;,&amp;quot;import Base from &amp;apos;./base&amp;apos;;\\nimport { TCell } from &amp;apos;./types&amp;apos;;\\nimport { html } from &amp;apos;./util/html&amp;apos;;\\nimport { ComponentChild } from &amp;apos;preact&amp;apos;;\\n\\nclass Cell extends Base {\\n  // because a Cell is a subset of TCell type\\n  public data: number | string | boolean | ComponentChild;\\n\\n  constructor(data: TCell) {\\n    super();\\n\\n    this.update(data);\\n  }\\n\\n  private cast(data: TCell): number | string | boolean | ComponentChild {\\n    if (data instanceof HTMLElement) {\\n      return html(data.outerHTML);\\n    }\\n\\n    return data;\\n  }\\n\\n  /**\\n   * Updates the Cell&amp;apos;s data\\n   *\\n   * @param data\\n   */\\n  public update(data: TCell): Cell {\\n    this.data = this.cast(data);\\n    return this;\\n  }\\n}\\n\\nexport default Cell;\\n&amp;quot;,&amp;quot;// The order of enum items define the processing order of the processor type\\n// e.g. Extractor = 0 will be processed before Transformer = 1\\nimport { generateUUID, ID } from &amp;apos;../util/id&amp;apos;;\\nimport { EventEmitter } from &amp;apos;../util/eventEmitter&amp;apos;;\\nimport { deepEqual } from &amp;apos;../util/deepEqual&amp;apos;;\\n\\nexport enum ProcessorType {\\n  Initiator,\\n  ServerFilter,\\n  ServerSort,\\n  ServerLimit,\\n  Extractor,\\n  Transformer,\\n  Filter,\\n  Sort,\\n  Limit,\\n}\\n\\ninterface PipelineProcessorEvents {\\n  propsUpdated: &amp;lt;T, P&amp;gt;(processor: PipelineProcessor&amp;lt;T, P&amp;gt;) =&amp;gt; void;\\n  beforeProcess: (...args) =&amp;gt; void;\\n  afterProcess: (...args) =&amp;gt; void;\\n}\\n\\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\\nexport interface PipelineProcessorProps {}\\n\\nexport abstract class PipelineProcessor&amp;lt;\\n  T,\\n  P extends Partial&amp;lt;PipelineProcessorProps&amp;gt;,\\n&amp;gt; extends EventEmitter&amp;lt;PipelineProcessorEvents&amp;gt; {\\n  public readonly id: ID;\\n  private _props: P;\\n\\n  abstract get type(): ProcessorType;\\n  protected abstract _process(...args): T | Promise&amp;lt;T&amp;gt;;\\n  protected validateProps?(...args): void;\\n\\n  constructor(props?: Partial&amp;lt;P&amp;gt;) {\\n    super();\\n\\n    this._props = {} as P;\\n    this.id = generateUUID();\\n\\n    if (props) this.setProps(props);\\n  }\\n\\n  /**\\n   * process is used to call beforeProcess and afterProcess callbacks\\n   * This function is just a wrapper that calls _process()\\n   *\\n   * @param args\\n   */\\n  process(...args): T | Promise&amp;lt;T&amp;gt; {\\n    if (this.validateProps instanceof Function) {\\n      this.validateProps(...args);\\n    }\\n\\n    this.emit(&amp;apos;beforeProcess&amp;apos;, ...args);\\n    const result = this._process(...args);\\n    this.emit(&amp;apos;afterProcess&amp;apos;, ...args);\\n    return result;\\n  }\\n\\n  setProps(props: Partial&amp;lt;P&amp;gt;): this {\\n    const updatedProps = {\\n      ...this._props,\\n      ...props,\\n    };\\n\\n    if (!deepEqual(updatedProps, this._props)) {\\n      this._props = updatedProps;\\n      this.emit(&amp;apos;propsUpdated&amp;apos;, this);\\n    }\\n\\n    return this;\\n  }\\n\\n  get props(): P {\\n    return this._props;\\n  }\\n}\\n&amp;quot;,&amp;quot;import Cell from &amp;apos;./cell&amp;apos;;\\nimport Base from &amp;apos;./base&amp;apos;;\\nimport { TCell } from &amp;apos;./types&amp;apos;;\\n\\nclass Row extends Base {\\n  private _cells: Cell[];\\n\\n  constructor(cells?: Cell[]) {\\n    super();\\n\\n    this.cells = cells || [];\\n  }\\n\\n  public cell(index: number): Cell {\\n    return this._cells[index];\\n  }\\n\\n  public get cells(): Cell[] {\\n    return this._cells;\\n  }\\n\\n  public set cells(cells: Cell[]) {\\n    this._cells = cells;\\n  }\\n\\n  public toArray(): TCell[] {\\n    return this.cells.map((cell) =&amp;gt; cell.data);\\n  }\\n\\n  /**\\n   * Creates a new Row from an array of Cell(s)\\n   * This method generates a new ID for the Row and all nested elements\\n   *\\n   * @param cells\\n   * @returns Row\\n   */\\n  static fromCells(cells: Cell[]): Row {\\n    return new Row(cells.map((cell) =&amp;gt; new Cell(cell.data)));\\n  }\\n\\n  get length(): number {\\n    return this.cells.length;\\n  }\\n}\\n\\nexport default Row;\\n&amp;quot;,&amp;quot;import Base from &amp;apos;./base&amp;apos;;\\nimport Row from &amp;apos;./row&amp;apos;;\\nimport Cell from &amp;apos;./cell&amp;apos;;\\nimport { OneDArray, TCell, TwoDArray } from &amp;apos;./types&amp;apos;;\\nimport { oneDtoTwoD } from &amp;apos;./util/array&amp;apos;;\\n\\nclass Tabular extends Base {\\n  private _rows: Row[];\\n  private _length: number;\\n\\n  constructor(rows?: Row[] | Row) {\\n    super();\\n\\n    if (rows instanceof Array) {\\n      this.rows = rows;\\n    } else if (rows instanceof Row) {\\n      this.rows = [rows];\\n    } else {\\n      this.rows = [];\\n    }\\n  }\\n\\n  get rows(): Row[] {\\n    return this._rows;\\n  }\\n\\n  set rows(rows: Row[]) {\\n    this._rows = rows;\\n  }\\n\\n  get length(): number {\\n    return this._length || this.rows.length;\\n  }\\n\\n  // we want to sent the length when storage is ServerStorage\\n  set length(len: number) {\\n    this._length = len;\\n  }\\n\\n  public toArray(): TCell[][] {\\n    return this.rows.map((row) =&amp;gt; row.toArray());\\n  }\\n\\n  /**\\n   * Creates a new Tabular from an array of Row(s)\\n   * This method generates a new ID for the Tabular and all nested elements\\n   *\\n   * @param rows\\n   * @returns Tabular\\n   */\\n  static fromRows(rows: Row[]): Tabular {\\n    return new Tabular(rows.map((row) =&amp;gt; Row.fromCells(row.cells)));\\n  }\\n\\n  /**\\n   * Creates a new Tabular from a 2D array\\n   * This method generates a new ID for the Tabular and all nested elements\\n   *\\n   * @param data\\n   * @returns Tabular\\n   */\\n  static fromArray&amp;lt;T extends TCell&amp;gt;(\\n    data: OneDArray&amp;lt;T&amp;gt; | TwoDArray&amp;lt;T&amp;gt;,\\n  ): Tabular {\\n    data = oneDtoTwoD(data);\\n\\n    return new Tabular(\\n      data.map((row) =&amp;gt; new Row(row.map((cell) =&amp;gt; new Cell(cell)))),\\n    );\\n  }\\n}\\n\\nexport default Tabular;\\n&amp;quot;,&amp;quot;import { OneDArray, TwoDArray } from &amp;apos;../types&amp;apos;;\\n\\nexport function oneDtoTwoD&amp;lt;T&amp;gt;(data: OneDArray&amp;lt;T&amp;gt; | TwoDArray&amp;lt;T&amp;gt;): TwoDArray&amp;lt;T&amp;gt; {\\n  if (data[0] &amp;amp;&amp;amp; !(data[0] instanceof Array)) {\\n    return [data] as TwoDArray&amp;lt;T&amp;gt;;\\n  }\\n\\n  return data as TwoDArray&amp;lt;T&amp;gt;;\\n}\\n\\nexport function flatten&amp;lt;T&amp;gt;(arrays: TwoDArray&amp;lt;T&amp;gt;): OneDArray&amp;lt;T&amp;gt; {\\n  return arrays.reduce((prev, x) =&amp;gt; prev.concat(x), []);\\n}\\n&amp;quot;,&amp;quot;type EventArgs&amp;lt;T&amp;gt; = [T] extends [(...args: infer U) =&amp;gt; any]\\n  ? U\\n  : [T] extends [void]\\n  ? []\\n  : [T];\\n\\n/**\\n * Example:\\n *\\n * export interface BaseEvents&amp;lt;P, S&amp;gt; {\\n *   SET_STATE: (component: BaseComponent&amp;lt;P, S&amp;gt;, state: S) =&amp;gt; void;\\n * }\\n */\\n\\nexport interface EventEmitter&amp;lt;EventTypes&amp;gt; {\\n  addListener&amp;lt;EventName extends keyof EventTypes&amp;gt;(\\n    event: EventName,\\n    listener: (...args: EventArgs&amp;lt;EventTypes[EventName]&amp;gt;) =&amp;gt; void,\\n  ): EventEmitter&amp;lt;EventTypes&amp;gt;;\\n\\n  on&amp;lt;EventName extends keyof EventTypes&amp;gt;(\\n    event: EventName,\\n    listener: (...args: EventArgs&amp;lt;EventTypes[EventName]&amp;gt;) =&amp;gt; void,\\n  ): EventEmitter&amp;lt;EventTypes&amp;gt;;\\n\\n  off&amp;lt;EventName extends keyof EventTypes&amp;gt;(\\n    event: EventName,\\n    listener: (...args: EventArgs&amp;lt;EventTypes[EventName]&amp;gt;) =&amp;gt; void,\\n  ): EventEmitter&amp;lt;EventTypes&amp;gt;;\\n\\n  emit&amp;lt;EventName extends keyof EventTypes&amp;gt;(\\n    event: EventName,\\n    ...args: EventArgs&amp;lt;EventTypes[EventName]&amp;gt;\\n  ): boolean;\\n}\\n\\nexport class EventEmitter&amp;lt;EventTypes&amp;gt; {\\n  private callbacks: { [event: string]: ((...args) =&amp;gt; void)[] };\\n\\n  // because we are using EventEmitter as a mixin and the\\n  // constructor won&amp;apos;t be called by the applyMixins function\\n  // see src/base.ts and src/util/applyMixin.ts\\n  private init(event?: string): void {\\n    if (!this.callbacks) {\\n      this.callbacks = {};\\n    }\\n\\n    if (event &amp;amp;&amp;amp; !this.callbacks[event]) {\\n      this.callbacks[event] = [];\\n    }\\n  }\\n\\n  listeners(): { [event: string]: ((...args) =&amp;gt; void)[] } {\\n    return this.callbacks;\\n  }\\n\\n  on&amp;lt;EventName extends keyof EventTypes&amp;gt;(\\n    event: EventName,\\n    listener: (...args: EventArgs&amp;lt;EventTypes[EventName]&amp;gt;) =&amp;gt; void,\\n  ): EventEmitter&amp;lt;EventTypes&amp;gt; {\\n    this.init(event as string);\\n    this.callbacks[event as string].push(listener);\\n    return this;\\n  }\\n\\n  off&amp;lt;EventName extends keyof EventTypes&amp;gt;(\\n    event: EventName,\\n    listener: (...args: EventArgs&amp;lt;EventTypes[EventName]&amp;gt;) =&amp;gt; void,\\n  ): EventEmitter&amp;lt;EventTypes&amp;gt; {\\n    const eventName = event as string;\\n\\n    this.init();\\n\\n    if (!this.callbacks[eventName] || this.callbacks[eventName].length === 0) {\\n      // there is no callbacks with this key\\n      return this;\\n    }\\n\\n    this.callbacks[eventName] = this.callbacks[eventName].filter(\\n      (value) =&amp;gt; value != listener,\\n    );\\n\\n    return this;\\n  }\\n\\n  emit&amp;lt;EventName extends keyof EventTypes&amp;gt;(\\n    event: EventName,\\n    ...args: EventArgs&amp;lt;EventTypes[EventName]&amp;gt;\\n  ): boolean {\\n    const eventName = event as string;\\n\\n    this.init(eventName);\\n\\n    if (this.callbacks[eventName].length &amp;gt; 0) {\\n      this.callbacks[eventName].forEach((value) =&amp;gt; value(...args));\\n      return true;\\n    }\\n\\n    return false;\\n  }\\n}\\n&amp;quot;,&amp;quot;/**\\n * Returns true if both objects are equal\\n * @param a left object\\n * @param b right object\\n * @returns\\n */\\nexport function deepEqual&amp;lt;A, B&amp;gt;(obj1: A, obj2: B) {\\n  // If objects are not the same type, return false\\n  if (typeof obj1 !== typeof obj2) {\\n    return false;\\n  }\\n  // If objects are both null or undefined, return true\\n  if (obj1 === null &amp;amp;&amp;amp; obj2 === null) {\\n    return true;\\n  }\\n  // If objects are both primitive types, compare them directly\\n  if (typeof obj1 !== &amp;apos;object&amp;apos;) {\\n    // eslint-disable-next-line\\n    // @ts-ignore\\n    return obj1 === obj2;\\n  }\\n  // If objects are arrays, compare their elements recursively\\n  if (Array.isArray(obj1) &amp;amp;&amp;amp; Array.isArray(obj2)) {\\n    if (obj1.length !== obj2.length) {\\n      return false;\\n    }\\n    for (let i = 0; i &amp;lt; obj1.length; i++) {\\n      if (!deepEqual(obj1[i], obj2[i])) {\\n        return false;\\n      }\\n    }\\n    return true;\\n  }\\n  // If objects are VNodes, compare their props only\\n  if (\\n    // eslint-disable-next-line no-prototype-builtins\\n    obj1.hasOwnProperty(&amp;apos;constructor&amp;apos;) &amp;amp;&amp;amp;\\n    // eslint-disable-next-line no-prototype-builtins\\n    obj2.hasOwnProperty(&amp;apos;constructor&amp;apos;) &amp;amp;&amp;amp;\\n    // eslint-disable-next-line no-prototype-builtins\\n    obj1.hasOwnProperty(&amp;apos;props&amp;apos;) &amp;amp;&amp;amp;\\n    // eslint-disable-next-line no-prototype-builtins\\n    obj2.hasOwnProperty(&amp;apos;props&amp;apos;) &amp;amp;&amp;amp;\\n    // eslint-disable-next-line no-prototype-builtins\\n    obj1.hasOwnProperty(&amp;apos;key&amp;apos;) &amp;amp;&amp;amp;\\n    // eslint-disable-next-line no-prototype-builtins\\n    obj2.hasOwnProperty(&amp;apos;key&amp;apos;) &amp;amp;&amp;amp;\\n    // eslint-disable-next-line no-prototype-builtins\\n    obj1.hasOwnProperty(&amp;apos;ref&amp;apos;) &amp;amp;&amp;amp;\\n    // eslint-disable-next-line no-prototype-builtins\\n    obj2.hasOwnProperty(&amp;apos;ref&amp;apos;) &amp;amp;&amp;amp;\\n    // eslint-disable-next-line no-prototype-builtins\\n    obj1.hasOwnProperty(&amp;apos;type&amp;apos;) &amp;amp;&amp;amp;\\n    // eslint-disable-next-line no-prototype-builtins\\n    obj2.hasOwnProperty(&amp;apos;type&amp;apos;)\\n  ) {\\n    return deepEqual(obj1[&amp;apos;props&amp;apos;], obj2[&amp;apos;props&amp;apos;]);\\n  }\\n  // If objects are both objects, compare their properties recursively\\n  const keys1 = Object.keys(obj1);\\n  const keys2 = Object.keys(obj2);\\n  if (keys1.length !== keys2.length) {\\n    return false;\\n  }\\n  for (const key of keys1) {\\n    // eslint-disable-next-line no-prototype-builtins\\n    if (!obj2.hasOwnProperty(key) || !deepEqual(obj1[key], obj2[key])) {\\n      return false;\\n    }\\n  }\\n  return true;\\n}\\n&amp;quot;,&amp;quot;import search from &amp;apos;../../operator/search&amp;apos;;\\nimport Tabular from &amp;apos;../../tabular&amp;apos;;\\nimport {\\n  PipelineProcessor,\\n  PipelineProcessorProps,\\n  ProcessorType,\\n} from &amp;apos;../processor&amp;apos;;\\nimport { OneDArray, TCell, TColumn } from &amp;apos;../../types&amp;apos;;\\n\\ninterface GlobalSearchFilterProps extends PipelineProcessorProps {\\n  keyword: string;\\n  columns: OneDArray&amp;lt;TColumn&amp;gt;;\\n  ignoreHiddenColumns: boolean;\\n  selector?: (cell: TCell, rowIndex: number, cellIndex: number) =&amp;gt; string;\\n}\\n\\nclass GlobalSearchFilter extends PipelineProcessor&amp;lt;\\n  Tabular,\\n  GlobalSearchFilterProps\\n&amp;gt; {\\n  get type(): ProcessorType {\\n    return ProcessorType.Filter;\\n  }\\n\\n  _process(data: Tabular): Tabular {\\n    if (this.props.keyword) {\\n      return search(\\n        String(this.props.keyword).trim(),\\n        this.props.columns,\\n        this.props.ignoreHiddenColumns,\\n        data,\\n        this.props.selector,\\n      );\\n    }\\n\\n    return data;\\n  }\\n}\\n\\nexport default GlobalSearchFilter;\\n&amp;quot;,&amp;quot;import Tabular from &amp;apos;../tabular&amp;apos;;\\nimport { VNode } from &amp;apos;preact&amp;apos;;\\nimport { HTMLContentProps } from &amp;apos;../view/htmlElement&amp;apos;;\\nimport { OneDArray, TCell, TColumn } from &amp;apos;../types&amp;apos;;\\n\\nexport default function (\\n  keyword: string,\\n  columns: OneDArray&amp;lt;TColumn&amp;gt;,\\n  ignoreHiddenColumns: boolean,\\n  tabular: Tabular,\\n  selector?: (cell: TCell, rowIndex: number, cellIndex: number) =&amp;gt; string,\\n): Tabular {\\n  // escape special regex chars\\n  keyword = keyword.replace(/[-[\\\\]{}()*+?.,\\\\\\\\^$|#\\\\s]/g, &amp;apos;\\\\\\\\$&amp;amp;&amp;apos;);\\n\\n  return new Tabular(\\n    tabular.rows.filter((row, rowIndex) =&amp;gt;\\n      row.cells.some((cell, cellIndex) =&amp;gt; {\\n        if (!cell) {\\n          return false;\\n        }\\n\\n        if (ignoreHiddenColumns) {\\n          if (\\n            columns &amp;amp;&amp;amp;\\n            columns[cellIndex] &amp;amp;&amp;amp;\\n            typeof columns[cellIndex] === &amp;apos;object&amp;apos;\\n          ) {\\n            const typedColumn = columns[cellIndex] as TColumn;\\n            if (typedColumn.hidden) {\\n              return false;\\n            }\\n          }\\n        }\\n\\n        let data = &amp;apos;&amp;apos;;\\n\\n        if (typeof selector === &amp;apos;function&amp;apos;) {\\n          data = selector(cell.data, rowIndex, cellIndex);\\n        } else if (typeof cell.data === &amp;apos;object&amp;apos;) {\\n          // HTMLContent element\\n          const element = cell.data as VNode&amp;lt;HTMLContentProps&amp;gt;;\\n          if (element &amp;amp;&amp;amp; element.props &amp;amp;&amp;amp; element.props.content) {\\n            // TODO: we should only search in the content of the element. props.content is the entire HTML element\\n            data = element.props.content;\\n          }\\n        } else {\\n          // primitive types\\n          data = String(cell.data);\\n        }\\n\\n        return new RegExp(keyword, &amp;apos;gi&amp;apos;).test(data);\\n      }),\\n    ),\\n  );\\n}\\n&amp;quot;,&amp;quot;import { JSXInternal } from &amp;apos;preact/src/jsx&amp;apos;;\\n\\nexport function className(...args: string[]): string {\\n  const prefix = &amp;apos;gridjs&amp;apos;;\\n\\n  return `${prefix}${args.reduce(\\n    (prev: string, cur: string) =&amp;gt; `${prev}-${cur}`,\\n    &amp;apos;&amp;apos;,\\n  )}`;\\n}\\n\\nexport function classJoin(\\n  ...classNames: (undefined | string | JSXInternal.SignalLike&amp;lt;string&amp;gt;)[]\\n): string {\\n  return classNames\\n    .map((x) =&amp;gt; (x ? x.toString() : &amp;apos;&amp;apos;))\\n    .filter((x) =&amp;gt; x)\\n    .reduce((className, prev) =&amp;gt; `${className || &amp;apos;&amp;apos;} ${prev}`, &amp;apos;&amp;apos;)\\n    .trim();\\n}\\n&amp;quot;,&amp;quot;import {\\n  PipelineProcessor,\\n  PipelineProcessorProps,\\n  ProcessorType,\\n} from &amp;apos;../processor&amp;apos;;\\nimport { ServerStorageOptions } from &amp;apos;../../storage/server&amp;apos;;\\n\\ninterface ServerGlobalSearchFilterProps extends PipelineProcessorProps {\\n  keyword?: string;\\n  url?: (prevUrl: string, keyword: string) =&amp;gt; string;\\n  body?: (prevBody: BodyInit, keyword: string) =&amp;gt; BodyInit;\\n}\\n\\nclass ServerGlobalSearchFilter extends PipelineProcessor&amp;lt;\\n  ServerStorageOptions,\\n  ServerGlobalSearchFilterProps\\n&amp;gt; {\\n  get type(): ProcessorType {\\n    return ProcessorType.ServerFilter;\\n  }\\n\\n  _process(options?: ServerStorageOptions): ServerStorageOptions {\\n    if (!this.props.keyword) return options;\\n\\n    const updates = {};\\n\\n    if (this.props.url) {\\n      updates[&amp;apos;url&amp;apos;] = this.props.url(options.url, this.props.keyword);\\n    }\\n\\n    if (this.props.body) {\\n      updates[&amp;apos;body&amp;apos;] = this.props.body(options.body, this.props.keyword);\\n    }\\n\\n    return {\\n      ...options,\\n      ...updates,\\n    };\\n  }\\n}\\n\\nexport default ServerGlobalSearchFilter;\\n&amp;quot;,&amp;quot;import{options as n}from\\&amp;quot;preact\\&amp;quot;;var t,r,u,i,o=0,f=[],c=[],e=n.__b,a=n.__r,v=n.diffed,l=n.__c,m=n.unmount;function d(t,u){n.__h&amp;amp;&amp;amp;n.__h(r,t,o||u),o=0;var i=r.__H||(r.__H={__:[],__h:[]});return t&amp;gt;=i.__.length&amp;amp;&amp;amp;i.__.push({__V:c}),i.__[t]}function p(n){return o=1,y(B,n)}function y(n,u,i){var o=d(t++,2);if(o.t=n,!o.__c&amp;amp;&amp;amp;(o.__=[i?i(u):B(void 0,u),function(n){var t=o.__N?o.__N[0]:o.__[0],r=o.t(t,n);t!==r&amp;amp;&amp;amp;(o.__N=[r,o.__[1]],o.__c.setState({}))}],o.__c=r,!r.u)){r.u=!0;var f=r.shouldComponentUpdate;r.shouldComponentUpdate=function(n,t,r){if(!o.__c.__H)return!0;var u=o.__c.__H.__.filter(function(n){return n.__c});if(u.every(function(n){return!n.__N}))return!f||f.call(this,n,t,r);var i=!1;return u.forEach(function(n){if(n.__N){var t=n.__[0];n.__=n.__N,n.__N=void 0,t!==n.__[0]&amp;amp;&amp;amp;(i=!0)}}),!(!i&amp;amp;&amp;amp;o.__c.props===n)&amp;amp;&amp;amp;(!f||f.call(this,n,t,r))}}return o.__N||o.__}function h(u,i){var o=d(t++,3);!n.__s&amp;amp;&amp;amp;z(o.__H,i)&amp;amp;&amp;amp;(o.__=u,o.i=i,r.__H.__h.push(o))}function s(u,i){var o=d(t++,4);!n.__s&amp;amp;&amp;amp;z(o.__H,i)&amp;amp;&amp;amp;(o.__=u,o.i=i,r.__h.push(o))}function _(n){return o=5,F(function(){return{current:n}},[])}function A(n,t,r){o=6,s(function(){return\\&amp;quot;function\\&amp;quot;==typeof n?(n(t()),function(){return n(null)}):n?(n.current=t(),function(){return n.current=null}):void 0},null==r?r:r.concat(n))}function F(n,r){var u=d(t++,7);return z(u.__H,r)?(u.__V=n(),u.i=r,u.__h=n,u.__V):u.__}function T(n,t){return o=8,F(function(){return n},t)}function q(n){var u=r.context[n.__c],i=d(t++,9);return i.c=n,u?(null==i.__&amp;amp;&amp;amp;(i.__=!0,u.sub(r)),u.props.value):n.__}function x(t,r){n.useDebugValue&amp;amp;&amp;amp;n.useDebugValue(r?r(t):t)}function P(n){var u=d(t++,10),i=p();return u.__=n,r.componentDidCatch||(r.componentDidCatch=function(n,t){u.__&amp;amp;&amp;amp;u.__(n,t),i[1](n)}),[i[0],function(){i[1](void 0)}]}function V(){var n=d(t++,11);if(!n.__){for(var u=r.__v;null!==u&amp;amp;&amp;amp;!u.__m&amp;amp;&amp;amp;null!==u.__;)u=u.__;var i=u.__m||(u.__m=[0,0]);n.__=\\&amp;quot;P\\&amp;quot;+i[0]+\\&amp;quot;-\\&amp;quot;+i[1]++}return n.__}function b(){for(var t;t=f.shift();)if(t.__P&amp;amp;&amp;amp;t.__H)try{t.__H.__h.forEach(k),t.__H.__h.forEach(w),t.__H.__h=[]}catch(r){t.__H.__h=[],n.__e(r,t.__v)}}n.__b=function(n){r=null,e&amp;amp;&amp;amp;e(n)},n.__r=function(n){a&amp;amp;&amp;amp;a(n),t=0;var i=(r=n.__c).__H;i&amp;amp;&amp;amp;(u===r?(i.__h=[],r.__h=[],i.__.forEach(function(n){n.__N&amp;amp;&amp;amp;(n.__=n.__N),n.__V=c,n.__N=n.i=void 0})):(i.__h.forEach(k),i.__h.forEach(w),i.__h=[])),u=r},n.diffed=function(t){v&amp;amp;&amp;amp;v(t);var o=t.__c;o&amp;amp;&amp;amp;o.__H&amp;amp;&amp;amp;(o.__H.__h.length&amp;amp;&amp;amp;(1!==f.push(o)&amp;amp;&amp;amp;i===n.requestAnimationFrame||((i=n.requestAnimationFrame)||j)(b)),o.__H.__.forEach(function(n){n.i&amp;amp;&amp;amp;(n.__H=n.i),n.__V!==c&amp;amp;&amp;amp;(n.__=n.__V),n.i=void 0,n.__V=c})),u=r=null},n.__c=function(t,r){r.some(function(t){try{t.__h.forEach(k),t.__h=t.__h.filter(function(n){return!n.__||w(n)})}catch(u){r.some(function(n){n.__h&amp;amp;&amp;amp;(n.__h=[])}),r=[],n.__e(u,t.__v)}}),l&amp;amp;&amp;amp;l(t,r)},n.unmount=function(t){m&amp;amp;&amp;amp;m(t);var r,u=t.__c;u&amp;amp;&amp;amp;u.__H&amp;amp;&amp;amp;(u.__H.__.forEach(function(n){try{k(n)}catch(n){r=n}}),u.__H=void 0,r&amp;amp;&amp;amp;n.__e(r,u.__v))};var g=\\&amp;quot;function\\&amp;quot;==typeof requestAnimationFrame;function j(n){var t,r=function(){clearTimeout(u),g&amp;amp;&amp;amp;cancelAnimationFrame(t),setTimeout(n)},u=setTimeout(r,100);g&amp;amp;&amp;amp;(t=requestAnimationFrame(r))}function k(n){var t=r,u=n.__c;\\&amp;quot;function\\&amp;quot;==typeof u&amp;amp;&amp;amp;(n.__c=void 0,u()),r=t}function w(n){var t=r;n.__c=n.__(),r=t}function z(n,t){return!n||n.length!==t.length||t.some(function(t,r){return t!==n[r]})}function B(n,t){return\\&amp;quot;function\\&amp;quot;==typeof t?t(n):t}export{T as useCallback,q as useContext,x as useDebugValue,h as useEffect,P as useErrorBoundary,V as useId,A as useImperativeHandle,s as useLayoutEffect,F as useMemo,y as useReducer,_ as useRef,p as useState};\\n//# sourceMappingURL=hooks.module.js.map\\n&amp;quot;,&amp;quot;import { useContext } from &amp;apos;preact/hooks&amp;apos;;\\nimport { Config, ConfigContext } from &amp;apos;../config&amp;apos;;\\n\\nexport function useConfig(): Config {\\n  return useContext(ConfigContext);\\n}\\n&amp;quot;,&amp;quot;export default {\\n  search: {\\n    placeholder: &amp;apos;Type a keyword...&amp;apos;,\\n  },\\n  sort: {\\n    sortAsc: &amp;apos;Sort column ascending&amp;apos;,\\n    sortDesc: &amp;apos;Sort column descending&amp;apos;,\\n  },\\n  pagination: {\\n    previous: &amp;apos;Previous&amp;apos;,\\n    next: &amp;apos;Next&amp;apos;,\\n    navigate: (page, pages) =&amp;gt; `Page ${page} of ${pages}`,\\n    page: (page) =&amp;gt; `Page ${page}`,\\n    showing: &amp;apos;Showing&amp;apos;,\\n    of: &amp;apos;of&amp;apos;,\\n    to: &amp;apos;to&amp;apos;,\\n    results: &amp;apos;results&amp;apos;,\\n  },\\n  loading: &amp;apos;Loading...&amp;apos;,\\n  noRecordsFound: &amp;apos;No matching records found&amp;apos;,\\n  error: &amp;apos;An error happened while fetching the data&amp;apos;,\\n};\\n&amp;quot;,&amp;quot;import { useConfig } from &amp;apos;../hooks/useConfig&amp;apos;;\\nimport enUS from &amp;apos;./en_US&amp;apos;;\\ntype MessageFormat = (...args) =&amp;gt; string;\\ntype Message = string | MessageFormat;\\nexport type Language = { [key: string]: Message | Language };\\n\\nexport class Translator {\\n  private readonly _language: Language;\\n  private readonly _defaultLanguage: Language;\\n\\n  constructor(language?: Language) {\\n    this._language = language;\\n    this._defaultLanguage = enUS;\\n  }\\n\\n  /**\\n   * Tries to split the message with \\&amp;quot;.\\&amp;quot; and find\\n   * the key in the given language\\n   *\\n   * @param message\\n   * @param lang\\n   */\\n  getString(message: string, lang: Language): MessageFormat {\\n    if (!lang || !message) return null;\\n\\n    const splitted = message.split(&amp;apos;.&amp;apos;);\\n    const key = splitted[0];\\n\\n    if (lang[key]) {\\n      const val = lang[key];\\n\\n      if (typeof val === &amp;apos;string&amp;apos;) {\\n        return (): string =&amp;gt; val;\\n      } else if (typeof val === &amp;apos;function&amp;apos;) {\\n        return val;\\n      } else {\\n        return this.getString(splitted.slice(1).join(&amp;apos;.&amp;apos;), val);\\n      }\\n    }\\n\\n    return null;\\n  }\\n\\n  translate(message: string, ...args): string {\\n    const translated = this.getString(message, this._language);\\n    let messageFormat;\\n\\n    if (translated) {\\n      messageFormat = translated;\\n    } else {\\n      messageFormat = this.getString(message, this._defaultLanguage);\\n    }\\n\\n    if (messageFormat) {\\n      return messageFormat(...args);\\n    }\\n\\n    return message;\\n  }\\n}\\n\\nexport function useTranslator() {\\n  const config = useConfig();\\n\\n  return function (message: string, ...args): string {\\n    return config.translator.translate(message, ...args);\\n  };\\n}\\n&amp;quot;,&amp;quot;export const SearchKeyword = (payload) =&amp;gt; (state) =&amp;gt; {\\n  return {\\n    ...state,\\n    search: {\\n      keyword: payload,\\n    },\\n  };\\n};\\n&amp;quot;,&amp;quot;import { useConfig } from &amp;apos;./useConfig&amp;apos;;\\n\\nexport function useStore() {\\n  const config = useConfig();\\n  return config.store;\\n}\\n&amp;quot;,&amp;quot;import { useEffect, useState } from &amp;apos;preact/hooks&amp;apos;;\\nimport { useStore } from &amp;apos;./useStore&amp;apos;;\\n\\nexport default function useSelector&amp;lt;T&amp;gt;(selector: (state) =&amp;gt; T) {\\n  const store = useStore();\\n  const [current, setCurrent] = useState(selector(store.getState()));\\n\\n  useEffect(() =&amp;gt; {\\n    const unsubscribe = store.subscribe(() =&amp;gt; {\\n      const updated = selector(store.getState());\\n\\n      if (current !== updated) {\\n        setCurrent(updated);\\n      }\\n    });\\n\\n    return unsubscribe;\\n  }, []);\\n\\n  return current;\\n}\\n&amp;quot;,&amp;quot;import { h, JSX } from &amp;apos;preact&amp;apos;;\\nimport GlobalSearchFilter from &amp;apos;../../../pipeline/filter/globalSearch&amp;apos;;\\nimport { classJoin, className } from &amp;apos;../../../util/className&amp;apos;;\\nimport ServerGlobalSearchFilter from &amp;apos;../../../pipeline/filter/serverGlobalSearch&amp;apos;;\\nimport { TCell } from &amp;apos;../../../types&amp;apos;;\\nimport { useConfig } from &amp;apos;../../../hooks/useConfig&amp;apos;;\\nimport { useCallback, useEffect, useState } from &amp;apos;preact/hooks&amp;apos;;\\nimport { useTranslator } from &amp;apos;../../../i18n/language&amp;apos;;\\nimport * as actions from &amp;apos;./actions&amp;apos;;\\nimport { useStore } from &amp;apos;../../../hooks/useStore&amp;apos;;\\nimport useSelector from &amp;apos;../../../hooks/useSelector&amp;apos;;\\nimport { debounce } from &amp;apos;../../../util/debounce&amp;apos;;\\n\\nexport interface SearchConfig {\\n  keyword?: string;\\n  ignoreHiddenColumns?: boolean;\\n  debounceTimeout?: number;\\n  selector?: (cell: TCell, rowIndex: number, cellIndex: number) =&amp;gt; string;\\n  server?: {\\n    url?: (prevUrl: string, keyword: string) =&amp;gt; string;\\n    body?: (prevBody: BodyInit, keyword: string) =&amp;gt; BodyInit;\\n  };\\n}\\n\\nexport function Search() {\\n  const [processor, setProcessor] = useState&amp;lt;\\n    GlobalSearchFilter | ServerGlobalSearchFilter\\n  &amp;gt;(undefined);\\n  const config = useConfig();\\n  const props = config.search as SearchConfig;\\n  const _ = useTranslator();\\n  const { dispatch } = useStore();\\n  const state = useSelector((state) =&amp;gt; state.search);\\n\\n  useEffect(() =&amp;gt; {\\n    if (!processor) return;\\n\\n    processor.setProps({\\n      keyword: state?.keyword,\\n    });\\n  }, [state, processor]);\\n\\n  useEffect(() =&amp;gt; {\\n    if (props.server) {\\n      setProcessor(\\n        new ServerGlobalSearchFilter({\\n          keyword: props.keyword,\\n          url: props.server.url,\\n          body: props.server.body,\\n        }),\\n      );\\n    } else {\\n      setProcessor(\\n        new GlobalSearchFilter({\\n          keyword: props.keyword,\\n          columns: config.header &amp;amp;&amp;amp; config.header.columns,\\n          ignoreHiddenColumns:\\n            props.ignoreHiddenColumns ||\\n            props.ignoreHiddenColumns === undefined,\\n          selector: props.selector,\\n        }),\\n      );\\n    }\\n\\n    // initial search\\n    if (props.keyword) dispatch(actions.SearchKeyword(props.keyword));\\n  }, [props]);\\n\\n  useEffect(() =&amp;gt; {\\n    if (!processor) return undefined;\\n\\n    config.pipeline.register&amp;lt;object, object&amp;gt;(processor);\\n\\n    return () =&amp;gt; config.pipeline.unregister&amp;lt;object, object&amp;gt;(processor);\\n  }, [config, processor]);\\n\\n  const debouncedOnInput = useCallback(\\n    debounce(\\n      (event: JSX.TargetedEvent&amp;lt;HTMLInputElement&amp;gt;) =&amp;gt; {\\n        if (event.target instanceof HTMLInputElement) {\\n          dispatch(actions.SearchKeyword(event.target.value));\\n        }\\n      },\\n      processor instanceof ServerGlobalSearchFilter\\n        ? props.debounceTimeout || 250\\n        : 0,\\n    ),\\n    [props, processor],\\n  );\\n\\n  return (\\n    &amp;lt;div className={className(classJoin(&amp;apos;search&amp;apos;, config.className?.search))}&amp;gt;\\n      &amp;lt;input\\n        type=\\&amp;quot;search\\&amp;quot;\\n        placeholder={_(&amp;apos;search.placeholder&amp;apos;)}\\n        aria-label={_(&amp;apos;search.placeholder&amp;apos;)}\\n        onInput={debouncedOnInput}\\n        className={classJoin(className(&amp;apos;input&amp;apos;), className(&amp;apos;search&amp;apos;, &amp;apos;input&amp;apos;))}\\n        defaultValue={state?.keyword || &amp;apos;&amp;apos;}\\n      /&amp;gt;\\n    &amp;lt;/div&amp;gt;\\n  );\\n}\\n&amp;quot;,&amp;quot;export const debounce = &amp;lt;F extends (...args: any[]) =&amp;gt; any&amp;gt;(\\n  func: F,\\n  waitFor: number,\\n) =&amp;gt; {\\n  let timeout;\\n\\n  return (...args: Parameters&amp;lt;F&amp;gt;): Promise&amp;lt;ReturnType&amp;lt;F&amp;gt;&amp;gt; =&amp;gt;\\n    new Promise((resolve) =&amp;gt; {\\n      if (timeout) {\\n        clearTimeout(timeout);\\n      }\\n\\n      timeout = setTimeout(() =&amp;gt; resolve(func(...args)), waitFor);\\n    });\\n};\\n&amp;quot;,&amp;quot;import Tabular from &amp;apos;../../tabular&amp;apos;;\\nimport {\\n  PipelineProcessor,\\n  PipelineProcessorProps,\\n  ProcessorType,\\n} from &amp;apos;../processor&amp;apos;;\\n\\ninterface PaginationLimitProps extends PipelineProcessorProps {\\n  page: number;\\n  limit: number;\\n}\\n\\nclass PaginationLimit extends PipelineProcessor&amp;lt;Tabular, PaginationLimitProps&amp;gt; {\\n  protected validateProps(): void {\\n    if (isNaN(Number(this.props.limit)) || isNaN(Number(this.props.page))) {\\n      throw Error(&amp;apos;Invalid parameters passed&amp;apos;);\\n    }\\n  }\\n\\n  get type(): ProcessorType {\\n    return ProcessorType.Limit;\\n  }\\n\\n  protected _process(data: Tabular): Tabular {\\n    const page = this.props.page;\\n    const start = page * this.props.limit;\\n    const end = (page + 1) * this.props.limit;\\n\\n    return new Tabular(data.rows.slice(start, end));\\n  }\\n}\\n\\nexport default PaginationLimit;\\n&amp;quot;,&amp;quot;import {\\n  PipelineProcessor,\\n  PipelineProcessorProps,\\n  ProcessorType,\\n} from &amp;apos;../processor&amp;apos;;\\nimport { ServerStorageOptions } from &amp;apos;../../storage/server&amp;apos;;\\n\\ninterface ServerPaginationLimitProps extends PipelineProcessorProps {\\n  page: number;\\n  limit: number;\\n  url?: (prevUrl: string, page: number, limit: number) =&amp;gt; string;\\n  body?: (prevBody: BodyInit, page: number, limit: number) =&amp;gt; BodyInit;\\n}\\n\\nclass ServerPaginationLimit extends PipelineProcessor&amp;lt;\\n  ServerStorageOptions,\\n  ServerPaginationLimitProps\\n&amp;gt; {\\n  get type(): ProcessorType {\\n    return ProcessorType.ServerLimit;\\n  }\\n\\n  _process(options?: ServerStorageOptions): ServerStorageOptions {\\n    const updates = {};\\n\\n    if (this.props.url) {\\n      updates[&amp;apos;url&amp;apos;] = this.props.url(\\n        options.url,\\n        this.props.page,\\n        this.props.limit,\\n      );\\n    }\\n\\n    if (this.props.body) {\\n      updates[&amp;apos;body&amp;apos;] = this.props.body(\\n        options.body,\\n        this.props.page,\\n        this.props.limit,\\n      );\\n    }\\n\\n    return {\\n      ...options,\\n      ...updates,\\n    };\\n  }\\n}\\n\\nexport default ServerPaginationLimit;\\n&amp;quot;,&amp;quot;import { h, Fragment } from &amp;apos;preact&amp;apos;;\\nimport PaginationLimit from &amp;apos;../../pipeline/limit/pagination&amp;apos;;\\nimport { classJoin, className } from &amp;apos;../../util/className&amp;apos;;\\nimport ServerPaginationLimit from &amp;apos;../../pipeline/limit/serverPagination&amp;apos;;\\nimport { useConfig } from &amp;apos;../../hooks/useConfig&amp;apos;;\\nimport { useEffect, useRef, useState } from &amp;apos;preact/hooks&amp;apos;;\\nimport { useTranslator } from &amp;apos;../../i18n/language&amp;apos;;\\n\\nexport interface PaginationConfig {\\n  limit?: number;\\n  page?: number;\\n  summary?: boolean;\\n  nextButton?: boolean;\\n  prevButton?: boolean;\\n  buttonsCount?: number;\\n  resetPageOnUpdate?: boolean;\\n  server?: {\\n    url?: (prevUrl: string, page: number, limit: number) =&amp;gt; string;\\n    body?: (prevBody: BodyInit, page: number, limit: number) =&amp;gt; BodyInit;\\n  };\\n}\\n\\nexport function Pagination() {\\n  const config = useConfig();\\n  const {\\n    server,\\n    summary = true,\\n    nextButton = true,\\n    prevButton = true,\\n    buttonsCount = 3,\\n    limit = 10,\\n    page = 0,\\n    resetPageOnUpdate = true,\\n  } = config.pagination as PaginationConfig;\\n\\n  const processor = useRef&amp;lt;PaginationLimit | ServerPaginationLimit&amp;gt;(null);\\n  const [currentPage, setCurrentPage] = useState(page);\\n  const [total, setTotal] = useState(0);\\n  const _ = useTranslator();\\n\\n  useEffect(() =&amp;gt; {\\n    if (server) {\\n      processor.current = new ServerPaginationLimit({\\n        limit: limit,\\n        page: currentPage,\\n        url: server.url,\\n        body: server.body,\\n      });\\n\\n      config.pipeline.register(processor.current);\\n    } else {\\n      processor.current = new PaginationLimit({\\n        limit: limit,\\n        page: currentPage,\\n      });\\n\\n      config.pipeline.register(processor.current);\\n    }\\n\\n    if (processor.current instanceof ServerPaginationLimit) {\\n      config.pipeline.on(&amp;apos;afterProcess&amp;apos;, (tabular) =&amp;gt; setTotal(tabular.length));\\n    } else if (processor.current instanceof PaginationLimit) {\\n      // Pagination (all Limit processors) is the last step in the pipeline\\n      // and we assume that at this stage, we have the rows that we care about.\\n      // Let&amp;apos;s grab the rows before processing Pagination and set total number of rows\\n      processor.current.on(&amp;apos;beforeProcess&amp;apos;, (tabular) =&amp;gt;\\n        setTotal(tabular.length),\\n      );\\n    }\\n\\n    config.pipeline.on(&amp;apos;updated&amp;apos;, onUpdate);\\n\\n    // we need to make sure that the state is set\\n    // to the default props when an error happens\\n    config.pipeline.on(&amp;apos;error&amp;apos;, () =&amp;gt; {\\n      setTotal(0);\\n      setCurrentPage(0);\\n    });\\n\\n    return () =&amp;gt; {\\n      config.pipeline.unregister&amp;lt;object, object&amp;gt;(processor.current);\\n      config.pipeline.off(&amp;apos;updated&amp;apos;, onUpdate);\\n    };\\n  }, []);\\n\\n  const onUpdate = (updatedProcessor) =&amp;gt; {\\n    // this is to ensure that the current page is set to 0\\n    // when a processor is updated for some reason\\n    if (resetPageOnUpdate &amp;amp;&amp;amp; updatedProcessor !== processor.current) {\\n      setCurrentPage(0);\\n\\n      if (processor.current.props.page !== 0) {\\n        processor.current.setProps({\\n          page: 0,\\n        });\\n      }\\n    }\\n  };\\n\\n  const pages = () =&amp;gt; Math.ceil(total / limit);\\n\\n  const setPage = (page: number) =&amp;gt; {\\n    if (page &amp;gt;= pages() || page &amp;lt; 0 || page === currentPage) {\\n      return null;\\n    }\\n\\n    setCurrentPage(page);\\n\\n    processor.current.setProps({\\n      page: page,\\n    });\\n  };\\n\\n  const renderPages = () =&amp;gt; {\\n    if (buttonsCount &amp;lt;= 0) {\\n      return null;\\n    }\\n\\n    // how many pagination buttons to render?\\n    const maxCount: number = Math.min(pages(), buttonsCount);\\n\\n    let pagePivot = Math.min(currentPage, Math.floor(maxCount / 2));\\n    if (currentPage + Math.floor(maxCount / 2) &amp;gt;= pages()) {\\n      pagePivot = maxCount - (pages() - currentPage);\\n    }\\n\\n    return (\\n      &amp;lt;Fragment&amp;gt;\\n        {pages() &amp;gt; maxCount &amp;amp;&amp;amp; currentPage - pagePivot &amp;gt; 0 &amp;amp;&amp;amp; (\\n          &amp;lt;Fragment&amp;gt;\\n            &amp;lt;button\\n              tabIndex={0}\\n              role=\\&amp;quot;button\\&amp;quot;\\n              onClick={() =&amp;gt; setPage(0)}\\n              title={_(&amp;apos;pagination.firstPage&amp;apos;)}\\n              aria-label={_(&amp;apos;pagination.firstPage&amp;apos;)}\\n              className={config.className.paginationButton}\\n            &amp;gt;\\n              {_(&amp;apos;1&amp;apos;)}\\n            &amp;lt;/button&amp;gt;\\n            &amp;lt;button\\n              tabIndex={-1}\\n              className={classJoin(\\n                className(&amp;apos;spread&amp;apos;),\\n                config.className.paginationButton,\\n              )}\\n            &amp;gt;\\n              ...\\n            &amp;lt;/button&amp;gt;\\n          &amp;lt;/Fragment&amp;gt;\\n        )}\\n\\n        {Array.from(Array(maxCount).keys())\\n          .map((i) =&amp;gt; currentPage + (i - pagePivot))\\n          .map((i) =&amp;gt; (\\n            &amp;lt;button\\n              tabIndex={0}\\n              role=\\&amp;quot;button\\&amp;quot;\\n              onClick={() =&amp;gt; setPage(i)}\\n              className={classJoin(\\n                currentPage === i\\n                  ? classJoin(\\n                      className(&amp;apos;currentPage&amp;apos;),\\n                      config.className.paginationButtonCurrent,\\n                    )\\n                  : null,\\n                config.className.paginationButton,\\n              )}\\n              title={_(&amp;apos;pagination.page&amp;apos;, i + 1)}\\n              aria-label={_(&amp;apos;pagination.page&amp;apos;, i + 1)}\\n            &amp;gt;\\n              {_(`${i + 1}`)}\\n            &amp;lt;/button&amp;gt;\\n          ))}\\n\\n        {pages() &amp;gt; maxCount &amp;amp;&amp;amp; pages() &amp;gt; currentPage + pagePivot + 1 &amp;amp;&amp;amp; (\\n          &amp;lt;Fragment&amp;gt;\\n            &amp;lt;button\\n              tabIndex={-1}\\n              className={classJoin(\\n                className(&amp;apos;spread&amp;apos;),\\n                config.className.paginationButton,\\n              )}\\n            &amp;gt;\\n              ...\\n            &amp;lt;/button&amp;gt;\\n            &amp;lt;button\\n              tabIndex={0}\\n              role=\\&amp;quot;button\\&amp;quot;\\n              onClick={() =&amp;gt; setPage(pages() - 1)}\\n              title={_(&amp;apos;pagination.page&amp;apos;, pages())}\\n              aria-label={_(&amp;apos;pagination.page&amp;apos;, pages())}\\n              className={config.className.paginationButton}\\n            &amp;gt;\\n              {_(`${pages()}`)}\\n            &amp;lt;/button&amp;gt;\\n          &amp;lt;/Fragment&amp;gt;\\n        )}\\n      &amp;lt;/Fragment&amp;gt;\\n    );\\n  };\\n\\n  const renderSummary = () =&amp;gt; {\\n    return (\\n      &amp;lt;Fragment&amp;gt;\\n        {summary &amp;amp;&amp;amp; total &amp;gt; 0 &amp;amp;&amp;amp; (\\n          &amp;lt;div\\n            role=\\&amp;quot;status\\&amp;quot;\\n            aria-live=\\&amp;quot;polite\\&amp;quot;\\n            className={classJoin(\\n              className(&amp;apos;summary&amp;apos;),\\n              config.className.paginationSummary,\\n            )}\\n            title={_(&amp;apos;pagination.navigate&amp;apos;, currentPage + 1, pages())}\\n          &amp;gt;\\n            {_(&amp;apos;pagination.showing&amp;apos;)} &amp;lt;b&amp;gt;{_(`${currentPage * limit + 1}`)}&amp;lt;/b&amp;gt;{&amp;apos; &amp;apos;}\\n            {_(&amp;apos;pagination.to&amp;apos;)}{&amp;apos; &amp;apos;}\\n            &amp;lt;b&amp;gt;{_(`${Math.min((currentPage + 1) * limit, total)}`)}&amp;lt;/b&amp;gt;{&amp;apos; &amp;apos;}\\n            {_(&amp;apos;pagination.of&amp;apos;)} &amp;lt;b&amp;gt;{_(`${total}`)}&amp;lt;/b&amp;gt;{&amp;apos; &amp;apos;}\\n            {_(&amp;apos;pagination.results&amp;apos;)}\\n          &amp;lt;/div&amp;gt;\\n        )}\\n    &quot;,&quot;numLines&quot;:1}}"><div class="flex relative bg-white font-mono text-sm leading-6"><div class="py-4 border-b border-x border-slate-300 bg-slate-100 text-right select-none"><div><div class="relative"><a id="L1" href="#L1" class="inline-block w-full pl-4 sm:pl-6 pr-2 text-slate-600 hover:text-slate-950 outline-none">1</a></div></div></div><div class="py-4 pl-4 pr-6 relative border-b border-r border-slate-300 flex-grow whitespace-pre overflow-x-auto" style="tab-size:2;">{&quot;version&quot;:3,&quot;file&quot;:&quot;gridjs.js&quot;,&quot;sources&quot;:[&quot;../src/types.ts&quot;,&quot;../node_modules/preact/dist/preact.module.js&quot;,&quot;../src/util/id.ts&quot;,&quot;../src/base.ts&quot;,&quot;../src/view/htmlElement.tsx&quot;,&quot;../src/util/html.ts&quot;,&quot;../src/cell.ts&quot;,&quot;../src/pipeline/processor.ts&quot;,&quot;../src/row.ts&quot;,&quot;../src/tabular.ts&quot;,&quot;../src/util/array.ts&quot;,&quot;../src/util/eventEmitter.ts&quot;,&quot;../src/util/deepEqual.ts&quot;,&quot;../src/pipeline/filter/globalSearch.ts&quot;,&quot;../src/operator/search.ts&quot;,&quot;../src/util/className.ts&quot;,&quot;../src/pipeline/filter/serverGlobalSearch.ts&quot;,&quot;../node_modules/preact/hooks/dist/hooks.module.js&quot;,&quot;../src/hooks/useConfig.ts&quot;,&quot;../src/i18n/en_US.ts&quot;,&quot;../src/i18n/language.ts&quot;,&quot;../src/view/plugin/search/actions.ts&quot;,&quot;../src/hooks/useStore.ts&quot;,&quot;../src/hooks/useSelector.ts&quot;,&quot;../src/view/plugin/search/search.tsx&quot;,&quot;../src/util/debounce.ts&quot;,&quot;../src/pipeline/limit/pagination.ts&quot;,&quot;../src/pipeline/limit/serverPagination.ts&quot;,&quot;../src/view/plugin/pagination.tsx&quot;,&quot;../src/util/width.ts&quot;,&quot;../src/view/table/shadow.tsx&quot;,&quot;../src/util/string.ts&quot;,&quot;../src/plugin.ts&quot;,&quot;../src/util/log.ts&quot;,&quot;../src/header.ts&quot;,&quot;../src/storage/storage.ts&quot;,&quot;../src/storage/memory.ts&quot;,&quot;../src/storage/server.ts&quot;,&quot;../src/storage/storageUtils.ts&quot;,&quot;../src/pipeline/pipeline.ts&quot;,&quot;../src/pipeline/extractor/storage.ts&quot;,&quot;../src/pipeline/transformer/arrayToTabular.ts&quot;,&quot;../src/pipeline/initiator/server.ts&quot;,&quot;../src/pipeline/transformer/storageResponseToArray.ts&quot;,&quot;../src/pipeline/pipelineUtils.ts&quot;,&quot;../src/state/store.ts&quot;,&quot;../src/config.ts&quot;,&quot;../src/view/table/td.tsx&quot;,&quot;../src/view/table/tr.tsx&quot;,&quot;../src/view/table/messageRow.tsx&quot;,&quot;../src/view/table/tbody.tsx&quot;,&quot;../src/pipeline/sort/native.ts&quot;,&quot;../src/view/plugin/sort/actions.ts&quot;,&quot;../src/pipeline/sort/server.ts&quot;,&quot;../src/view/plugin/sort/sort.tsx&quot;,&quot;../src/util/throttle.ts&quot;,&quot;../src/view/plugin/resize/resize.tsx&quot;,&quot;../src/view/table/th.tsx&quot;,&quot;../src/view/table/thead.tsx&quot;,&quot;../src/util/table.ts&quot;,&quot;../src/view/actions.ts&quot;,&quot;../src/view/table/table.tsx&quot;,&quot;../src/view/headerContainer.tsx&quot;,&quot;../src/view/footerContainer.tsx&quot;,&quot;../src/view/container.tsx&quot;,&quot;../src/grid.ts&quot;],&quot;sourcesContent&quot;:[&quot;import { ComponentChild } from &apos;preact&apos;;\nimport Row from &apos;./row&apos;;\nimport { SortConfig } from &apos;./view/plugin/sort/sort&apos;;\nimport { JSXInternal } from &apos;preact/src/jsx&apos;;\nimport { Plugin } from &apos;./plugin&apos;;\n\nexport type OneDArray&lt;T&gt; = T[];\nexport type TwoDArray&lt;T&gt; = T[][];\n\n/**\n * Table cell types\n */\nexport type TCell = number | string | boolean | ComponentChild | HTMLElement;\n// Array of Arrays\nexport type TDataArrayRow = OneDArray&lt;TCell&gt;;\nexport type TDataArray = OneDArray&lt;TDataArrayRow&gt;;\n// Array of Objects\nexport type TDataObjectRow = { [key: string]: TCell };\nexport type TDataObject = OneDArray&lt;TDataObjectRow&gt;;\n// (Array of Arrays) and (Array of Objects)\nexport type TData = TDataArray | TDataObject;\n\n// Table header cell type\nexport interface TColumn {\n  id?: string;\n  // default data for all columns\n  data?: ((row: TDataArrayRow | TDataObjectRow) =&gt; TCell) | TCell;\n  // column label\n  name?: string | ComponentChild;\n  plugin?: Plugin&lt;any&gt;;\n  // column width\n  width?: string;\n  minWidth?: string;\n  sort?: SortConfig;\n  columns?: OneDArray&lt;TColumn&gt;;\n  resizable?: boolean;\n  hidden?: boolean;\n  formatter?: (cell: TCell, row: Row, column: TColumn) =&gt; ComponentChild;\n  // HTML attributes to be added to all cells and header of this column\n  attributes?:\n    | ((\n        // this is null when `attributes` is called for a th\n        cell: TCell | null,\n        row: Row | null,\n        column: TColumn,\n      ) =&gt; JSXInternal.HTMLAttributes&lt;HTMLTableCellElement&gt;)\n    | JSXInternal.HTMLAttributes&lt;HTMLTableCellElement&gt;;\n}\n\n// Comparator function for the sorting plugin\nexport type Comparator&lt;T&gt; = (a: T, b: T) =&gt; number;\n\nexport interface TColumnSort {\n  index: number;\n  // 1 ascending, -1 descending\n  direction?: 1 | -1;\n}\n\n// container status\nexport enum Status {\n  Init,\n  Loading,\n  Loaded,\n  Rendered,\n  Error,\n}\n\nexport type CSSDeclaration = {\n  [key: string]: string | number;\n};\n&quot;,&quot;var n,l,u,i,t,o,r,f={},e=[],c=/acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;function s(n,l){for(var u in l)n[u]=l[u];return n}function a(n){var l=n.parentNode;l&amp;&amp;l.removeChild(n)}function h(l,u,i){var t,o,r,f={};for(r in u)\&quot;key\&quot;==r?t=u[r]:\&quot;ref\&quot;==r?o=u[r]:f[r]=u[r];if(arguments.length&gt;2&amp;&amp;(f.children=arguments.length&gt;3?n.call(arguments,2):i),\&quot;function\&quot;==typeof l&amp;&amp;null!=l.defaultProps)for(r in l.defaultProps)void 0===f[r]&amp;&amp;(f[r]=l.defaultProps[r]);return v(l,f,t,o,null)}function v(n,i,t,o,r){var f={type:n,props:i,key:t,ref:o,__k:null,__:null,__b:0,__e:null,__d:void 0,__c:null,__h:null,constructor:void 0,__v:null==r?++u:r};return null==r&amp;&amp;null!=l.vnode&amp;&amp;l.vnode(f),f}function y(){return{current:null}}function p(n){return n.children}function d(n,l){this.props=n,this.context=l}function _(n,l){if(null==l)return n.__?_(n.__,n.__.__k.indexOf(n)+1):null;for(var u;l&lt;n.__k.length;l++)if(null!=(u=n.__k[l])&amp;&amp;null!=u.__e)return u.__e;return\&quot;function\&quot;==typeof n.type?_(n):null}function k(n){var l,u;if(null!=(n=n.__)&amp;&amp;null!=n.__c){for(n.__e=n.__c.base=null,l=0;l&lt;n.__k.length;l++)if(null!=(u=n.__k[l])&amp;&amp;null!=u.__e){n.__e=n.__c.base=u.__e;break}return k(n)}}function b(n){(!n.__d&amp;&amp;(n.__d=!0)&amp;&amp;t.push(n)&amp;&amp;!g.__r++||o!==l.debounceRendering)&amp;&amp;((o=l.debounceRendering)||setTimeout)(g)}function g(){for(var n;g.__r=t.length;)n=t.sort(function(n,l){return n.__v.__b-l.__v.__b}),t=[],n.some(function(n){var l,u,i,t,o,r;n.__d&amp;&amp;(o=(t=(l=n).__v).__e,(r=l.__P)&amp;&amp;(u=[],(i=s({},t)).__v=t.__v+1,j(r,t,i,l.__n,void 0!==r.ownerSVGElement,null!=t.__h?[o]:null,u,null==o?_(t):o,t.__h),z(u,t),t.__e!=o&amp;&amp;k(t)))})}function w(n,l,u,i,t,o,r,c,s,a){var h,y,d,k,b,g,w,x=i&amp;&amp;i.__k||e,C=x.length;for(u.__k=[],h=0;h&lt;l.length;h++)if(null!=(k=u.__k[h]=null==(k=l[h])||\&quot;boolean\&quot;==typeof k?null:\&quot;string\&quot;==typeof k||\&quot;number\&quot;==typeof k||\&quot;bigint\&quot;==typeof k?v(null,k,null,null,k):Array.isArray(k)?v(p,{children:k},null,null,null):k.__b&gt;0?v(k.type,k.props,k.key,k.ref?k.ref:null,k.__v):k)){if(k.__=u,k.__b=u.__b+1,null===(d=x[h])||d&amp;&amp;k.key==d.key&amp;&amp;k.type===d.type)x[h]=void 0;else for(y=0;y&lt;C;y++){if((d=x[y])&amp;&amp;k.key==d.key&amp;&amp;k.type===d.type){x[y]=void 0;break}d=null}j(n,k,d=d||f,t,o,r,c,s,a),b=k.__e,(y=k.ref)&amp;&amp;d.ref!=y&amp;&amp;(w||(w=[]),d.ref&amp;&amp;w.push(d.ref,null,k),w.push(y,k.__c||b,k)),null!=b?(null==g&amp;&amp;(g=b),\&quot;function\&quot;==typeof k.type&amp;&amp;k.__k===d.__k?k.__d=s=m(k,s,n):s=A(n,k,d,x,b,s),\&quot;function\&quot;==typeof u.type&amp;&amp;(u.__d=s)):s&amp;&amp;d.__e==s&amp;&amp;s.parentNode!=n&amp;&amp;(s=_(d))}for(u.__e=g,h=C;h--;)null!=x[h]&amp;&amp;N(x[h],x[h]);if(w)for(h=0;h&lt;w.length;h++)M(w[h],w[++h],w[++h])}function m(n,l,u){for(var i,t=n.__k,o=0;t&amp;&amp;o&lt;t.length;o++)(i=t[o])&amp;&amp;(i.__=n,l=\&quot;function\&quot;==typeof i.type?m(i,l,u):A(u,i,i,t,i.__e,l));return l}function x(n,l){return l=l||[],null==n||\&quot;boolean\&quot;==typeof n||(Array.isArray(n)?n.some(function(n){x(n,l)}):l.push(n)),l}function A(n,l,u,i,t,o){var r,f,e;if(void 0!==l.__d)r=l.__d,l.__d=void 0;else if(null==u||t!=o||null==t.parentNode)n:if(null==o||o.parentNode!==n)n.appendChild(t),r=null;else{for(f=o,e=0;(f=f.nextSibling)&amp;&amp;e&lt;i.length;e+=1)if(f==t)break n;n.insertBefore(t,o),r=o}return void 0!==r?r:t.nextSibling}function C(n,l,u,i,t){var o;for(o in u)\&quot;children\&quot;===o||\&quot;key\&quot;===o||o in l||H(n,o,null,u[o],i);for(o in l)t&amp;&amp;\&quot;function\&quot;!=typeof l[o]||\&quot;children\&quot;===o||\&quot;key\&quot;===o||\&quot;value\&quot;===o||\&quot;checked\&quot;===o||u[o]===l[o]||H(n,o,l[o],u[o],i)}function $(n,l,u){\&quot;-\&quot;===l[0]?n.setProperty(l,u):n[l]=null==u?\&quot;\&quot;:\&quot;number\&quot;!=typeof u||c.test(l)?u:u+\&quot;px\&quot;}function H(n,l,u,i,t){var o;n:if(\&quot;style\&quot;===l)if(\&quot;string\&quot;==typeof u)n.style.cssText=u;else{if(\&quot;string\&quot;==typeof i&amp;&amp;(n.style.cssText=i=\&quot;\&quot;),i)for(l in i)u&amp;&amp;l in u||$(n.style,l,\&quot;\&quot;);if(u)for(l in u)i&amp;&amp;u[l]===i[l]||$(n.style,l,u[l])}else if(\&quot;o\&quot;===l[0]&amp;&amp;\&quot;n\&quot;===l[1])o=l!==(l=l.replace(/Capture$/,\&quot;\&quot;)),l=l.toLowerCase()in n?l.toLowerCase().slice(2):l.slice(2),n.l||(n.l={}),n.l[l+o]=u,u?i||n.addEventListener(l,o?T:I,o):n.removeEventListener(l,o?T:I,o);else if(\&quot;dangerouslySetInnerHTML\&quot;!==l){if(t)l=l.replace(/xlink(H|:h)/,\&quot;h\&quot;).replace(/sName$/,\&quot;s\&quot;);else if(\&quot;href\&quot;!==l&amp;&amp;\&quot;list\&quot;!==l&amp;&amp;\&quot;form\&quot;!==l&amp;&amp;\&quot;tabIndex\&quot;!==l&amp;&amp;\&quot;download\&quot;!==l&amp;&amp;l in n)try{n[l]=null==u?\&quot;\&quot;:u;break n}catch(n){}\&quot;function\&quot;==typeof u||(null==u||!1===u&amp;&amp;-1==l.indexOf(\&quot;-\&quot;)?n.removeAttribute(l):n.setAttribute(l,u))}}function I(n){this.l[n.type+!1](l.event?l.event(n):n)}function T(n){this.l[n.type+!0](l.event?l.event(n):n)}function j(n,u,i,t,o,r,f,e,c){var a,h,v,y,_,k,b,g,m,x,A,C,$,H,I,T=u.type;if(void 0!==u.constructor)return null;null!=i.__h&amp;&amp;(c=i.__h,e=u.__e=i.__e,u.__h=null,r=[e]),(a=l.__b)&amp;&amp;a(u);try{n:if(\&quot;function\&quot;==typeof T){if(g=u.props,m=(a=T.contextType)&amp;&amp;t[a.__c],x=a?m?m.props.value:a.__:t,i.__c?b=(h=u.__c=i.__c).__=h.__E:(\&quot;prototype\&quot;in T&amp;&amp;T.prototype.render?u.__c=h=new T(g,x):(u.__c=h=new d(g,x),h.constructor=T,h.render=O),m&amp;&amp;m.sub(h),h.props=g,h.state||(h.state={}),h.context=x,h.__n=t,v=h.__d=!0,h.__h=[],h._sb=[]),null==h.__s&amp;&amp;(h.__s=h.state),null!=T.getDerivedStateFromProps&amp;&amp;(h.__s==h.state&amp;&amp;(h.__s=s({},h.__s)),s(h.__s,T.getDerivedStateFromProps(g,h.__s))),y=h.props,_=h.state,v)null==T.getDerivedStateFromProps&amp;&amp;null!=h.componentWillMount&amp;&amp;h.componentWillMount(),null!=h.componentDidMount&amp;&amp;h.__h.push(h.componentDidMount);else{if(null==T.getDerivedStateFromProps&amp;&amp;g!==y&amp;&amp;null!=h.componentWillReceiveProps&amp;&amp;h.componentWillReceiveProps(g,x),!h.__e&amp;&amp;null!=h.shouldComponentUpdate&amp;&amp;!1===h.shouldComponentUpdate(g,h.__s,x)||u.__v===i.__v){for(h.props=g,h.state=h.__s,u.__v!==i.__v&amp;&amp;(h.__d=!1),h.__v=u,u.__e=i.__e,u.__k=i.__k,u.__k.forEach(function(n){n&amp;&amp;(n.__=u)}),A=0;A&lt;h._sb.length;A++)h.__h.push(h._sb[A]);h._sb=[],h.__h.length&amp;&amp;f.push(h);break n}null!=h.componentWillUpdate&amp;&amp;h.componentWillUpdate(g,h.__s,x),null!=h.componentDidUpdate&amp;&amp;h.__h.push(function(){h.componentDidUpdate(y,_,k)})}if(h.context=x,h.props=g,h.__v=u,h.__P=n,C=l.__r,$=0,\&quot;prototype\&quot;in T&amp;&amp;T.prototype.render){for(h.state=h.__s,h.__d=!1,C&amp;&amp;C(u),a=h.render(h.props,h.state,h.context),H=0;H&lt;h._sb.length;H++)h.__h.push(h._sb[H]);h._sb=[]}else do{h.__d=!1,C&amp;&amp;C(u),a=h.render(h.props,h.state,h.context),h.state=h.__s}while(h.__d&amp;&amp;++$&lt;25);h.state=h.__s,null!=h.getChildContext&amp;&amp;(t=s(s({},t),h.getChildContext())),v||null==h.getSnapshotBeforeUpdate||(k=h.getSnapshotBeforeUpdate(y,_)),I=null!=a&amp;&amp;a.type===p&amp;&amp;null==a.key?a.props.children:a,w(n,Array.isArray(I)?I:[I],u,i,t,o,r,f,e,c),h.base=u.__e,u.__h=null,h.__h.length&amp;&amp;f.push(h),b&amp;&amp;(h.__E=h.__=null),h.__e=!1}else null==r&amp;&amp;u.__v===i.__v?(u.__k=i.__k,u.__e=i.__e):u.__e=L(i.__e,u,i,t,o,r,f,c);(a=l.diffed)&amp;&amp;a(u)}catch(n){u.__v=null,(c||null!=r)&amp;&amp;(u.__e=e,u.__h=!!c,r[r.indexOf(e)]=null),l.__e(n,u,i)}}function z(n,u){l.__c&amp;&amp;l.__c(u,n),n.some(function(u){try{n=u.__h,u.__h=[],n.some(function(n){n.call(u)})}catch(n){l.__e(n,u.__v)}})}function L(l,u,i,t,o,r,e,c){var s,h,v,y=i.props,p=u.props,d=u.type,k=0;if(\&quot;svg\&quot;===d&amp;&amp;(o=!0),null!=r)for(;k&lt;r.length;k++)if((s=r[k])&amp;&amp;\&quot;setAttribute\&quot;in s==!!d&amp;&amp;(d?s.localName===d:3===s.nodeType)){l=s,r[k]=null;break}if(null==l){if(null===d)return document.createTextNode(p);l=o?document.createElementNS(\&quot;http://www.w3.org/2000/svg\&quot;,d):document.createElement(d,p.is&amp;&amp;p),r=null,c=!1}if(null===d)y===p||c&amp;&amp;l.data===p||(l.data=p);else{if(r=r&amp;&amp;n.call(l.childNodes),h=(y=i.props||f).dangerouslySetInnerHTML,v=p.dangerouslySetInnerHTML,!c){if(null!=r)for(y={},k=0;k&lt;l.attributes.length;k++)y[l.attributes[k].name]=l.attributes[k].value;(v||h)&amp;&amp;(v&amp;&amp;(h&amp;&amp;v.__html==h.__html||v.__html===l.innerHTML)||(l.innerHTML=v&amp;&amp;v.__html||\&quot;\&quot;))}if(C(l,p,y,o,c),v)u.__k=[];else if(k=u.props.children,w(l,Array.isArray(k)?k:[k],u,i,t,o&amp;&amp;\&quot;foreignObject\&quot;!==d,r,e,r?r[0]:i.__k&amp;&amp;_(i,0),c),null!=r)for(k=r.length;k--;)null!=r[k]&amp;&amp;a(r[k]);c||(\&quot;value\&quot;in p&amp;&amp;void 0!==(k=p.value)&amp;&amp;(k!==l.value||\&quot;progress\&quot;===d&amp;&amp;!k||\&quot;option\&quot;===d&amp;&amp;k!==y.value)&amp;&amp;H(l,\&quot;value\&quot;,k,y.value,!1),\&quot;checked\&quot;in p&amp;&amp;void 0!==(k=p.checked)&amp;&amp;k!==l.checked&amp;&amp;H(l,\&quot;checked\&quot;,k,y.checked,!1))}return l}function M(n,u,i){try{\&quot;function\&quot;==typeof n?n(u):n.current=u}catch(n){l.__e(n,i)}}function N(n,u,i){var t,o;if(l.unmount&amp;&amp;l.unmount(n),(t=n.ref)&amp;&amp;(t.current&amp;&amp;t.current!==n.__e||M(t,null,u)),null!=(t=n.__c)){if(t.componentWillUnmount)try{t.componentWillUnmount()}catch(n){l.__e(n,u)}t.base=t.__P=null,n.__c=void 0}if(t=n.__k)for(o=0;o&lt;t.length;o++)t[o]&amp;&amp;N(t[o],u,i||\&quot;function\&quot;!=typeof n.type);i||null==n.__e||a(n.__e),n.__=n.__e=n.__d=void 0}function O(n,l,u){return this.constructor(n,u)}function P(u,i,t){var o,r,e;l.__&amp;&amp;l.__(u,i),r=(o=\&quot;function\&quot;==typeof t)?null:t&amp;&amp;t.__k||i.__k,e=[],j(i,u=(!o&amp;&amp;t||i).__k=h(p,null,[u]),r||f,f,void 0!==i.ownerSVGElement,!o&amp;&amp;t?[t]:r?null:i.firstChild?n.call(i.childNodes):null,e,!o&amp;&amp;t?t:r?r.__e:i.firstChild,o),z(e,u)}function S(n,l){P(n,l,S)}function q(l,u,i){var t,o,r,f=s({},l.props);for(r in u)\&quot;key\&quot;==r?t=u[r]:\&quot;ref\&quot;==r?o=u[r]:f[r]=u[r];return arguments.length&gt;2&amp;&amp;(f.children=arguments.length&gt;3?n.call(arguments,2):i),v(l.type,f,t||l.key,o||l.ref,null)}function B(n,l){var u={__c:l=\&quot;__cC\&quot;+r++,__:n,Consumer:function(n,l){return n.children(l)},Provider:function(n){var u,i;return this.getChildContext||(u=[],(i={})[l]=this,this.getChildContext=function(){return i},this.shouldComponentUpdate=function(n){this.props.value!==n.value&amp;&amp;u.some(b)},this.sub=function(n){u.push(n);var l=n.componentWillUnmount;n.componentWillUnmount=function(){u.splice(u.indexOf(n),1),l&amp;&amp;l.call(n)}}),n.children}};return u.Provider.__=u.Consumer.contextType=u}n=e.slice,l={__e:function(n,l,u,i){for(var t,o,r;l=l.__;)if((t=l.__c)&amp;&amp;!t.__)try{if((o=t.constructor)&amp;&amp;null!=o.getDerivedStateFromError&amp;&amp;(t.setState(o.getDerivedStateFromError(n)),r=t.__d),null!=t.componentDidCatch&amp;&amp;(t.componentDidCatch(n,i||{}),r=t.__d),r)return t.__E=t}catch(l){n=l}throw n}},u=0,i=function(n){return null!=n&amp;&amp;void 0===n.constructor},d.prototype.setState=function(n,l){var u;u=null!=this.__s&amp;&amp;this.__s!==this.state?this.__s:this.__s=s({},this.state),\&quot;function\&quot;==typeof n&amp;&amp;(n=n(s({},u),this.props)),n&amp;&amp;s(u,n),null!=n&amp;&amp;this.__v&amp;&amp;(l&amp;&amp;this._sb.push(l),b(this))},d.prototype.forceUpdate=function(n){this.__v&amp;&amp;(this.__e=!0,n&amp;&amp;this.__h.push(n),b(this))},d.prototype.render=p,t=[],g.__r=0,r=0;export{d as Component,p as Fragment,q as cloneElement,B as createContext,h as createElement,y as createRef,h,S as hydrate,i as isValidElement,l as options,P as render,x as toChildArray};\n//# sourceMappingURL=preact.module.js.map\n&quot;,&quot;export type ID = string;\n\nexport function generateUUID(): ID {\n  return &apos;xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx&apos;.replace(/[xy]/g, function (c) {\n    const r = (Math.random() * 16) | 0,\n      v = c == &apos;x&apos; ? r : (r &amp; 0x3) | 0x8;\n    return v.toString(16);\n  });\n}\n&quot;,&quot;import { generateUUID, ID } from &apos;./util/id&apos;;\n\nclass Base {\n  private readonly _id: ID;\n\n  constructor(id?: ID) {\n    this._id = id || generateUUID();\n  }\n\n  get id(): ID {\n    return this._id;\n  }\n}\n\nexport default Base;\n&quot;,&quot;import { h } from &apos;preact&apos;;\n\nexport interface HTMLContentProps {\n  content: string;\n  parentElement?: string;\n}\n\nexport function HTMLElement(props: HTMLContentProps) {\n  return h(props.parentElement || &apos;span&apos;, {\n    dangerouslySetInnerHTML: { __html: props.content },\n  });\n}\n&quot;,&quot;import { h, VNode } from &apos;preact&apos;;\nimport { HTMLElement } from &apos;../view/htmlElement&apos;;\n\nexport function decode(content: string): string {\n  const value = new DOMParser().parseFromString(content, &apos;text/html&apos;);\n  return value.documentElement.textContent;\n}\n\nexport function html(content: string, parentElement?: string): VNode {\n  return h(HTMLElement, { content: content, parentElement: parentElement });\n}\n&quot;,&quot;import Base from &apos;./base&apos;;\nimport { TCell } from &apos;./types&apos;;\nimport { html } from &apos;./util/html&apos;;\nimport { ComponentChild } from &apos;preact&apos;;\n\nclass Cell extends Base {\n  // because a Cell is a subset of TCell type\n  public data: number | string | boolean | ComponentChild;\n\n  constructor(data: TCell) {\n    super();\n\n    this.update(data);\n  }\n\n  private cast(data: TCell): number | string | boolean | ComponentChild {\n    if (data instanceof HTMLElement) {\n      return html(data.outerHTML);\n    }\n\n    return data;\n  }\n\n  /**\n   * Updates the Cell&apos;s data\n   *\n   * @param data\n   */\n  public update(data: TCell): Cell {\n    this.data = this.cast(data);\n    return this;\n  }\n}\n\nexport default Cell;\n&quot;,&quot;// The order of enum items define the processing order of the processor type\n// e.g. Extractor = 0 will be processed before Transformer = 1\nimport { generateUUID, ID } from &apos;../util/id&apos;;\nimport { EventEmitter } from &apos;../util/eventEmitter&apos;;\nimport { deepEqual } from &apos;../util/deepEqual&apos;;\n\nexport enum ProcessorType {\n  Initiator,\n  ServerFilter,\n  ServerSort,\n  ServerLimit,\n  Extractor,\n  Transformer,\n  Filter,\n  Sort,\n  Limit,\n}\n\ninterface PipelineProcessorEvents {\n  propsUpdated: &lt;T, P&gt;(processor: PipelineProcessor&lt;T, P&gt;) =&gt; void;\n  beforeProcess: (...args) =&gt; void;\n  afterProcess: (...args) =&gt; void;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface PipelineProcessorProps {}\n\nexport abstract class PipelineProcessor&lt;\n  T,\n  P extends Partial&lt;PipelineProcessorProps&gt;,\n&gt; extends EventEmitter&lt;PipelineProcessorEvents&gt; {\n  public readonly id: ID;\n  private _props: P;\n\n  abstract get type(): ProcessorType;\n  protected abstract _process(...args): T | Promise&lt;T&gt;;\n  protected validateProps?(...args): void;\n\n  constructor(props?: Partial&lt;P&gt;) {\n    super();\n\n    this._props = {} as P;\n    this.id = generateUUID();\n\n    if (props) this.setProps(props);\n  }\n\n  /**\n   * process is used to call beforeProcess and afterProcess callbacks\n   * This function is just a wrapper that calls _process()\n   *\n   * @param args\n   */\n  process(...args): T | Promise&lt;T&gt; {\n    if (this.validateProps instanceof Function) {\n      this.validateProps(...args);\n    }\n\n    this.emit(&apos;beforeProcess&apos;, ...args);\n    const result = this._process(...args);\n    this.emit(&apos;afterProcess&apos;, ...args);\n    return result;\n  }\n\n  setProps(props: Partial&lt;P&gt;): this {\n    const updatedProps = {\n      ...this._props,\n      ...props,\n    };\n\n    if (!deepEqual(updatedProps, this._props)) {\n      this._props = updatedProps;\n      this.emit(&apos;propsUpdated&apos;, this);\n    }\n\n    return this;\n  }\n\n  get props(): P {\n    return this._props;\n  }\n}\n&quot;,&quot;import Cell from &apos;./cell&apos;;\nimport Base from &apos;./base&apos;;\nimport { TCell } from &apos;./types&apos;;\n\nclass Row extends Base {\n  private _cells: Cell[];\n\n  constructor(cells?: Cell[]) {\n    super();\n\n    this.cells = cells || [];\n  }\n\n  public cell(index: number): Cell {\n    return this._cells[index];\n  }\n\n  public get cells(): Cell[] {\n    return this._cells;\n  }\n\n  public set cells(cells: Cell[]) {\n    this._cells = cells;\n  }\n\n  public toArray(): TCell[] {\n    return this.cells.map((cell) =&gt; cell.data);\n  }\n\n  /**\n   * Creates a new Row from an array of Cell(s)\n   * This method generates a new ID for the Row and all nested elements\n   *\n   * @param cells\n   * @returns Row\n   */\n  static fromCells(cells: Cell[]): Row {\n    return new Row(cells.map((cell) =&gt; new Cell(cell.data)));\n  }\n\n  get length(): number {\n    return this.cells.length;\n  }\n}\n\nexport default Row;\n&quot;,&quot;import Base from &apos;./base&apos;;\nimport Row from &apos;./row&apos;;\nimport Cell from &apos;./cell&apos;;\nimport { OneDArray, TCell, TwoDArray } from &apos;./types&apos;;\nimport { oneDtoTwoD } from &apos;./util/array&apos;;\n\nclass Tabular extends Base {\n  private _rows: Row[];\n  private _length: number;\n\n  constructor(rows?: Row[] | Row) {\n    super();\n\n    if (rows instanceof Array) {\n      this.rows = rows;\n    } else if (rows instanceof Row) {\n      this.rows = [rows];\n    } else {\n      this.rows = [];\n    }\n  }\n\n  get rows(): Row[] {\n    return this._rows;\n  }\n\n  set rows(rows: Row[]) {\n    this._rows = rows;\n  }\n\n  get length(): number {\n    return this._length || this.rows.length;\n  }\n\n  // we want to sent the length when storage is ServerStorage\n  set length(len: number) {\n    this._length = len;\n  }\n\n  public toArray(): TCell[][] {\n    return this.rows.map((row) =&gt; row.toArray());\n  }\n\n  /**\n   * Creates a new Tabular from an array of Row(s)\n   * This method generates a new ID for the Tabular and all nested elements\n   *\n   * @param rows\n   * @returns Tabular\n   */\n  static fromRows(rows: Row[]): Tabular {\n    return new Tabular(rows.map((row) =&gt; Row.fromCells(row.cells)));\n  }\n\n  /**\n   * Creates a new Tabular from a 2D array\n   * This method generates a new ID for the Tabular and all nested elements\n   *\n   * @param data\n   * @returns Tabular\n   */\n  static fromArray&lt;T extends TCell&gt;(\n    data: OneDArray&lt;T&gt; | TwoDArray&lt;T&gt;,\n  ): Tabular {\n    data = oneDtoTwoD(data);\n\n    return new Tabular(\n      data.map((row) =&gt; new Row(row.map((cell) =&gt; new Cell(cell)))),\n    );\n  }\n}\n\nexport default Tabular;\n&quot;,&quot;import { OneDArray, TwoDArray } from &apos;../types&apos;;\n\nexport function oneDtoTwoD&lt;T&gt;(data: OneDArray&lt;T&gt; | TwoDArray&lt;T&gt;): TwoDArray&lt;T&gt; {\n  if (data[0] &amp;&amp; !(data[0] instanceof Array)) {\n    return [data] as TwoDArray&lt;T&gt;;\n  }\n\n  return data as TwoDArray&lt;T&gt;;\n}\n\nexport function flatten&lt;T&gt;(arrays: TwoDArray&lt;T&gt;): OneDArray&lt;T&gt; {\n  return arrays.reduce((prev, x) =&gt; prev.concat(x), []);\n}\n&quot;,&quot;type EventArgs&lt;T&gt; = [T] extends [(...args: infer U) =&gt; any]\n  ? U\n  : [T] extends [void]\n  ? []\n  : [T];\n\n/**\n * Example:\n *\n * export interface BaseEvents&lt;P, S&gt; {\n *   SET_STATE: (component: BaseComponent&lt;P, S&gt;, state: S) =&gt; void;\n * }\n */\n\nexport interface EventEmitter&lt;EventTypes&gt; {\n  addListener&lt;EventName extends keyof EventTypes&gt;(\n    event: EventName,\n    listener: (...args: EventArgs&lt;EventTypes[EventName]&gt;) =&gt; void,\n  ): EventEmitter&lt;EventTypes&gt;;\n\n  on&lt;EventName extends keyof EventTypes&gt;(\n    event: EventName,\n    listener: (...args: EventArgs&lt;EventTypes[EventName]&gt;) =&gt; void,\n  ): EventEmitter&lt;EventTypes&gt;;\n\n  off&lt;EventName extends keyof EventTypes&gt;(\n    event: EventName,\n    listener: (...args: EventArgs&lt;EventTypes[EventName]&gt;) =&gt; void,\n  ): EventEmitter&lt;EventTypes&gt;;\n\n  emit&lt;EventName extends keyof EventTypes&gt;(\n    event: EventName,\n    ...args: EventArgs&lt;EventTypes[EventName]&gt;\n  ): boolean;\n}\n\nexport class EventEmitter&lt;EventTypes&gt; {\n  private callbacks: { [event: string]: ((...args) =&gt; void)[] };\n\n  // because we are using EventEmitter as a mixin and the\n  // constructor won&apos;t be called by the applyMixins function\n  // see src/base.ts and src/util/applyMixin.ts\n  private init(event?: string): void {\n    if (!this.callbacks) {\n      this.callbacks = {};\n    }\n\n    if (event &amp;&amp; !this.callbacks[event]) {\n      this.callbacks[event] = [];\n    }\n  }\n\n  listeners(): { [event: string]: ((...args) =&gt; void)[] } {\n    return this.callbacks;\n  }\n\n  on&lt;EventName extends keyof EventTypes&gt;(\n    event: EventName,\n    listener: (...args: EventArgs&lt;EventTypes[EventName]&gt;) =&gt; void,\n  ): EventEmitter&lt;EventTypes&gt; {\n    this.init(event as string);\n    this.callbacks[event as string].push(listener);\n    return this;\n  }\n\n  off&lt;EventName extends keyof EventTypes&gt;(\n    event: EventName,\n    listener: (...args: EventArgs&lt;EventTypes[EventName]&gt;) =&gt; void,\n  ): EventEmitter&lt;EventTypes&gt; {\n    const eventName = event as string;\n\n    this.init();\n\n    if (!this.callbacks[eventName] || this.callbacks[eventName].length === 0) {\n      // there is no callbacks with this key\n      return this;\n    }\n\n    this.callbacks[eventName] = this.callbacks[eventName].filter(\n      (value) =&gt; value != listener,\n    );\n\n    return this;\n  }\n\n  emit&lt;EventName extends keyof EventTypes&gt;(\n    event: EventName,\n    ...args: EventArgs&lt;EventTypes[EventName]&gt;\n  ): boolean {\n    const eventName = event as string;\n\n    this.init(eventName);\n\n    if (this.callbacks[eventName].length &gt; 0) {\n      this.callbacks[eventName].forEach((value) =&gt; value(...args));\n      return true;\n    }\n\n    return false;\n  }\n}\n&quot;,&quot;/**\n * Returns true if both objects are equal\n * @param a left object\n * @param b right object\n * @returns\n */\nexport function deepEqual&lt;A, B&gt;(obj1: A, obj2: B) {\n  // If objects are not the same type, return false\n  if (typeof obj1 !== typeof obj2) {\n    return false;\n  }\n  // If objects are both null or undefined, return true\n  if (obj1 === null &amp;&amp; obj2 === null) {\n    return true;\n  }\n  // If objects are both primitive types, compare them directly\n  if (typeof obj1 !== &apos;object&apos;) {\n    // eslint-disable-next-line\n    // @ts-ignore\n    return obj1 === obj2;\n  }\n  // If objects are arrays, compare their elements recursively\n  if (Array.isArray(obj1) &amp;&amp; Array.isArray(obj2)) {\n    if (obj1.length !== obj2.length) {\n      return false;\n    }\n    for (let i = 0; i &lt; obj1.length; i++) {\n      if (!deepEqual(obj1[i], obj2[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  // If objects are VNodes, compare their props only\n  if (\n    // eslint-disable-next-line no-prototype-builtins\n    obj1.hasOwnProperty(&apos;constructor&apos;) &amp;&amp;\n    // eslint-disable-next-line no-prototype-builtins\n    obj2.hasOwnProperty(&apos;constructor&apos;) &amp;&amp;\n    // eslint-disable-next-line no-prototype-builtins\n    obj1.hasOwnProperty(&apos;props&apos;) &amp;&amp;\n    // eslint-disable-next-line no-prototype-builtins\n    obj2.hasOwnProperty(&apos;props&apos;) &amp;&amp;\n    // eslint-disable-next-line no-prototype-builtins\n    obj1.hasOwnProperty(&apos;key&apos;) &amp;&amp;\n    // eslint-disable-next-line no-prototype-builtins\n    obj2.hasOwnProperty(&apos;key&apos;) &amp;&amp;\n    // eslint-disable-next-line no-prototype-builtins\n    obj1.hasOwnProperty(&apos;ref&apos;) &amp;&amp;\n    // eslint-disable-next-line no-prototype-builtins\n    obj2.hasOwnProperty(&apos;ref&apos;) &amp;&amp;\n    // eslint-disable-next-line no-prototype-builtins\n    obj1.hasOwnProperty(&apos;type&apos;) &amp;&amp;\n    // eslint-disable-next-line no-prototype-builtins\n    obj2.hasOwnProperty(&apos;type&apos;)\n  ) {\n    return deepEqual(obj1[&apos;props&apos;], obj2[&apos;props&apos;]);\n  }\n  // If objects are both objects, compare their properties recursively\n  const keys1 = Object.keys(obj1);\n  const keys2 = Object.keys(obj2);\n  if (keys1.length !== keys2.length) {\n    return false;\n  }\n  for (const key of keys1) {\n    // eslint-disable-next-line no-prototype-builtins\n    if (!obj2.hasOwnProperty(key) || !deepEqual(obj1[key], obj2[key])) {\n      return false;\n    }\n  }\n  return true;\n}\n&quot;,&quot;import search from &apos;../../operator/search&apos;;\nimport Tabular from &apos;../../tabular&apos;;\nimport {\n  PipelineProcessor,\n  PipelineProcessorProps,\n  ProcessorType,\n} from &apos;../processor&apos;;\nimport { OneDArray, TCell, TColumn } from &apos;../../types&apos;;\n\ninterface GlobalSearchFilterProps extends PipelineProcessorProps {\n  keyword: string;\n  columns: OneDArray&lt;TColumn&gt;;\n  ignoreHiddenColumns: boolean;\n  selector?: (cell: TCell, rowIndex: number, cellIndex: number) =&gt; string;\n}\n\nclass GlobalSearchFilter extends PipelineProcessor&lt;\n  Tabular,\n  GlobalSearchFilterProps\n&gt; {\n  get type(): ProcessorType {\n    return ProcessorType.Filter;\n  }\n\n  _process(data: Tabular): Tabular {\n    if (this.props.keyword) {\n      return search(\n        String(this.props.keyword).trim(),\n        this.props.columns,\n        this.props.ignoreHiddenColumns,\n        data,\n        this.props.selector,\n      );\n    }\n\n    return data;\n  }\n}\n\nexport default GlobalSearchFilter;\n&quot;,&quot;import Tabular from &apos;../tabular&apos;;\nimport { VNode } from &apos;preact&apos;;\nimport { HTMLContentProps } from &apos;../view/htmlElement&apos;;\nimport { OneDArray, TCell, TColumn } from &apos;../types&apos;;\n\nexport default function (\n  keyword: string,\n  columns: OneDArray&lt;TColumn&gt;,\n  ignoreHiddenColumns: boolean,\n  tabular: Tabular,\n  selector?: (cell: TCell, rowIndex: number, cellIndex: number) =&gt; string,\n): Tabular {\n  // escape special regex chars\n  keyword = keyword.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, &apos;\\\\$&amp;&apos;);\n\n  return new Tabular(\n    tabular.rows.filter((row, rowIndex) =&gt;\n      row.cells.some((cell, cellIndex) =&gt; {\n        if (!cell) {\n          return false;\n        }\n\n        if (ignoreHiddenColumns) {\n          if (\n            columns &amp;&amp;\n            columns[cellIndex] &amp;&amp;\n            typeof columns[cellIndex] === &apos;object&apos;\n          ) {\n            const typedColumn = columns[cellIndex] as TColumn;\n            if (typedColumn.hidden) {\n              return false;\n            }\n          }\n        }\n\n        let data = &apos;&apos;;\n\n        if (typeof selector === &apos;function&apos;) {\n          data = selector(cell.data, rowIndex, cellIndex);\n        } else if (typeof cell.data === &apos;object&apos;) {\n          // HTMLContent element\n          const element = cell.data as VNode&lt;HTMLContentProps&gt;;\n          if (element &amp;&amp; element.props &amp;&amp; element.props.content) {\n            // TODO: we should only search in the content of the element. props.content is the entire HTML element\n            data = element.props.content;\n          }\n        } else {\n          // primitive types\n          data = String(cell.data);\n        }\n\n        return new RegExp(keyword, &apos;gi&apos;).test(data);\n      }),\n    ),\n  );\n}\n&quot;,&quot;import { JSXInternal } from &apos;preact/src/jsx&apos;;\n\nexport function className(...args: string[]): string {\n  const prefix = &apos;gridjs&apos;;\n\n  return `${prefix}${args.reduce(\n    (prev: string, cur: string) =&gt; `${prev}-${cur}`,\n    &apos;&apos;,\n  )}`;\n}\n\nexport function classJoin(\n  ...classNames: (undefined | string | JSXInternal.SignalLike&lt;string&gt;)[]\n): string {\n  return classNames\n    .map((x) =&gt; (x ? x.toString() : &apos;&apos;))\n    .filter((x) =&gt; x)\n    .reduce((className, prev) =&gt; `${className || &apos;&apos;} ${prev}`, &apos;&apos;)\n    .trim();\n}\n&quot;,&quot;import {\n  PipelineProcessor,\n  PipelineProcessorProps,\n  ProcessorType,\n} from &apos;../processor&apos;;\nimport { ServerStorageOptions } from &apos;../../storage/server&apos;;\n\ninterface ServerGlobalSearchFilterProps extends PipelineProcessorProps {\n  keyword?: string;\n  url?: (prevUrl: string, keyword: string) =&gt; string;\n  body?: (prevBody: BodyInit, keyword: string) =&gt; BodyInit;\n}\n\nclass ServerGlobalSearchFilter extends PipelineProcessor&lt;\n  ServerStorageOptions,\n  ServerGlobalSearchFilterProps\n&gt; {\n  get type(): ProcessorType {\n    return ProcessorType.ServerFilter;\n  }\n\n  _process(options?: ServerStorageOptions): ServerStorageOptions {\n    if (!this.props.keyword) return options;\n\n    const updates = {};\n\n    if (this.props.url) {\n      updates[&apos;url&apos;] = this.props.url(options.url, this.props.keyword);\n    }\n\n    if (this.props.body) {\n      updates[&apos;body&apos;] = this.props.body(options.body, this.props.keyword);\n    }\n\n    return {\n      ...options,\n      ...updates,\n    };\n  }\n}\n\nexport default ServerGlobalSearchFilter;\n&quot;,&quot;import{options as n}from\&quot;preact\&quot;;var t,r,u,i,o=0,f=[],c=[],e=n.__b,a=n.__r,v=n.diffed,l=n.__c,m=n.unmount;function d(t,u){n.__h&amp;&amp;n.__h(r,t,o||u),o=0;var i=r.__H||(r.__H={__:[],__h:[]});return t&gt;=i.__.length&amp;&amp;i.__.push({__V:c}),i.__[t]}function p(n){return o=1,y(B,n)}function y(n,u,i){var o=d(t++,2);if(o.t=n,!o.__c&amp;&amp;(o.__=[i?i(u):B(void 0,u),function(n){var t=o.__N?o.__N[0]:o.__[0],r=o.t(t,n);t!==r&amp;&amp;(o.__N=[r,o.__[1]],o.__c.setState({}))}],o.__c=r,!r.u)){r.u=!0;var f=r.shouldComponentUpdate;r.shouldComponentUpdate=function(n,t,r){if(!o.__c.__H)return!0;var u=o.__c.__H.__.filter(function(n){return n.__c});if(u.every(function(n){return!n.__N}))return!f||f.call(this,n,t,r);var i=!1;return u.forEach(function(n){if(n.__N){var t=n.__[0];n.__=n.__N,n.__N=void 0,t!==n.__[0]&amp;&amp;(i=!0)}}),!(!i&amp;&amp;o.__c.props===n)&amp;&amp;(!f||f.call(this,n,t,r))}}return o.__N||o.__}function h(u,i){var o=d(t++,3);!n.__s&amp;&amp;z(o.__H,i)&amp;&amp;(o.__=u,o.i=i,r.__H.__h.push(o))}function s(u,i){var o=d(t++,4);!n.__s&amp;&amp;z(o.__H,i)&amp;&amp;(o.__=u,o.i=i,r.__h.push(o))}function _(n){return o=5,F(function(){return{current:n}},[])}function A(n,t,r){o=6,s(function(){return\&quot;function\&quot;==typeof n?(n(t()),function(){return n(null)}):n?(n.current=t(),function(){return n.current=null}):void 0},null==r?r:r.concat(n))}function F(n,r){var u=d(t++,7);return z(u.__H,r)?(u.__V=n(),u.i=r,u.__h=n,u.__V):u.__}function T(n,t){return o=8,F(function(){return n},t)}function q(n){var u=r.context[n.__c],i=d(t++,9);return i.c=n,u?(null==i.__&amp;&amp;(i.__=!0,u.sub(r)),u.props.value):n.__}function x(t,r){n.useDebugValue&amp;&amp;n.useDebugValue(r?r(t):t)}function P(n){var u=d(t++,10),i=p();return u.__=n,r.componentDidCatch||(r.componentDidCatch=function(n,t){u.__&amp;&amp;u.__(n,t),i[1](n)}),[i[0],function(){i[1](void 0)}]}function V(){var n=d(t++,11);if(!n.__){for(var u=r.__v;null!==u&amp;&amp;!u.__m&amp;&amp;null!==u.__;)u=u.__;var i=u.__m||(u.__m=[0,0]);n.__=\&quot;P\&quot;+i[0]+\&quot;-\&quot;+i[1]++}return n.__}function b(){for(var t;t=f.shift();)if(t.__P&amp;&amp;t.__H)try{t.__H.__h.forEach(k),t.__H.__h.forEach(w),t.__H.__h=[]}catch(r){t.__H.__h=[],n.__e(r,t.__v)}}n.__b=function(n){r=null,e&amp;&amp;e(n)},n.__r=function(n){a&amp;&amp;a(n),t=0;var i=(r=n.__c).__H;i&amp;&amp;(u===r?(i.__h=[],r.__h=[],i.__.forEach(function(n){n.__N&amp;&amp;(n.__=n.__N),n.__V=c,n.__N=n.i=void 0})):(i.__h.forEach(k),i.__h.forEach(w),i.__h=[])),u=r},n.diffed=function(t){v&amp;&amp;v(t);var o=t.__c;o&amp;&amp;o.__H&amp;&amp;(o.__H.__h.length&amp;&amp;(1!==f.push(o)&amp;&amp;i===n.requestAnimationFrame||((i=n.requestAnimationFrame)||j)(b)),o.__H.__.forEach(function(n){n.i&amp;&amp;(n.__H=n.i),n.__V!==c&amp;&amp;(n.__=n.__V),n.i=void 0,n.__V=c})),u=r=null},n.__c=function(t,r){r.some(function(t){try{t.__h.forEach(k),t.__h=t.__h.filter(function(n){return!n.__||w(n)})}catch(u){r.some(function(n){n.__h&amp;&amp;(n.__h=[])}),r=[],n.__e(u,t.__v)}}),l&amp;&amp;l(t,r)},n.unmount=function(t){m&amp;&amp;m(t);var r,u=t.__c;u&amp;&amp;u.__H&amp;&amp;(u.__H.__.forEach(function(n){try{k(n)}catch(n){r=n}}),u.__H=void 0,r&amp;&amp;n.__e(r,u.__v))};var g=\&quot;function\&quot;==typeof requestAnimationFrame;function j(n){var t,r=function(){clearTimeout(u),g&amp;&amp;cancelAnimationFrame(t),setTimeout(n)},u=setTimeout(r,100);g&amp;&amp;(t=requestAnimationFrame(r))}function k(n){var t=r,u=n.__c;\&quot;function\&quot;==typeof u&amp;&amp;(n.__c=void 0,u()),r=t}function w(n){var t=r;n.__c=n.__(),r=t}function z(n,t){return!n||n.length!==t.length||t.some(function(t,r){return t!==n[r]})}function B(n,t){return\&quot;function\&quot;==typeof t?t(n):t}export{T as useCallback,q as useContext,x as useDebugValue,h as useEffect,P as useErrorBoundary,V as useId,A as useImperativeHandle,s as useLayoutEffect,F as useMemo,y as useReducer,_ as useRef,p as useState};\n//# sourceMappingURL=hooks.module.js.map\n&quot;,&quot;import { useContext } from &apos;preact/hooks&apos;;\nimport { Config, ConfigContext } from &apos;../config&apos;;\n\nexport function useConfig(): Config {\n  return useContext(ConfigContext);\n}\n&quot;,&quot;export default {\n  search: {\n    placeholder: &apos;Type a keyword...&apos;,\n  },\n  sort: {\n    sortAsc: &apos;Sort column ascending&apos;,\n    sortDesc: &apos;Sort column descending&apos;,\n  },\n  pagination: {\n    previous: &apos;Previous&apos;,\n    next: &apos;Next&apos;,\n    navigate: (page, pages) =&gt; `Page ${page} of ${pages}`,\n    page: (page) =&gt; `Page ${page}`,\n    showing: &apos;Showing&apos;,\n    of: &apos;of&apos;,\n    to: &apos;to&apos;,\n    results: &apos;results&apos;,\n  },\n  loading: &apos;Loading...&apos;,\n  noRecordsFound: &apos;No matching records found&apos;,\n  error: &apos;An error happened while fetching the data&apos;,\n};\n&quot;,&quot;import { useConfig } from &apos;../hooks/useConfig&apos;;\nimport enUS from &apos;./en_US&apos;;\ntype MessageFormat = (...args) =&gt; string;\ntype Message = string | MessageFormat;\nexport type Language = { [key: string]: Message | Language };\n\nexport class Translator {\n  private readonly _language: Language;\n  private readonly _defaultLanguage: Language;\n\n  constructor(language?: Language) {\n    this._language = language;\n    this._defaultLanguage = enUS;\n  }\n\n  /**\n   * Tries to split the message with \&quot;.\&quot; and find\n   * the key in the given language\n   *\n   * @param message\n   * @param lang\n   */\n  getString(message: string, lang: Language): MessageFormat {\n    if (!lang || !message) return null;\n\n    const splitted = message.split(&apos;.&apos;);\n    const key = splitted[0];\n\n    if (lang[key]) {\n      const val = lang[key];\n\n      if (typeof val === &apos;string&apos;) {\n        return (): string =&gt; val;\n      } else if (typeof val === &apos;function&apos;) {\n        return val;\n      } else {\n        return this.getString(splitted.slice(1).join(&apos;.&apos;), val);\n      }\n    }\n\n    return null;\n  }\n\n  translate(message: string, ...args): string {\n    const translated = this.getString(message, this._language);\n    let messageFormat;\n\n    if (translated) {\n      messageFormat = translated;\n    } else {\n      messageFormat = this.getString(message, this._defaultLanguage);\n    }\n\n    if (messageFormat) {\n      return messageFormat(...args);\n    }\n\n    return message;\n  }\n}\n\nexport function useTranslator() {\n  const config = useConfig();\n\n  return function (message: string, ...args): string {\n    return config.translator.translate(message, ...args);\n  };\n}\n&quot;,&quot;export const SearchKeyword = (payload) =&gt; (state) =&gt; {\n  return {\n    ...state,\n    search: {\n      keyword: payload,\n    },\n  };\n};\n&quot;,&quot;import { useConfig } from &apos;./useConfig&apos;;\n\nexport function useStore() {\n  const config = useConfig();\n  return config.store;\n}\n&quot;,&quot;import { useEffect, useState } from &apos;preact/hooks&apos;;\nimport { useStore } from &apos;./useStore&apos;;\n\nexport default function useSelector&lt;T&gt;(selector: (state) =&gt; T) {\n  const store = useStore();\n  const [current, setCurrent] = useState(selector(store.getState()));\n\n  useEffect(() =&gt; {\n    const unsubscribe = store.subscribe(() =&gt; {\n      const updated = selector(store.getState());\n\n      if (current !== updated) {\n        setCurrent(updated);\n      }\n    });\n\n    return unsubscribe;\n  }, []);\n\n  return current;\n}\n&quot;,&quot;import { h, JSX } from &apos;preact&apos;;\nimport GlobalSearchFilter from &apos;../../../pipeline/filter/globalSearch&apos;;\nimport { classJoin, className } from &apos;../../../util/className&apos;;\nimport ServerGlobalSearchFilter from &apos;../../../pipeline/filter/serverGlobalSearch&apos;;\nimport { TCell } from &apos;../../../types&apos;;\nimport { useConfig } from &apos;../../../hooks/useConfig&apos;;\nimport { useCallback, useEffect, useState } from &apos;preact/hooks&apos;;\nimport { useTranslator } from &apos;../../../i18n/language&apos;;\nimport * as actions from &apos;./actions&apos;;\nimport { useStore } from &apos;../../../hooks/useStore&apos;;\nimport useSelector from &apos;../../../hooks/useSelector&apos;;\nimport { debounce } from &apos;../../../util/debounce&apos;;\n\nexport interface SearchConfig {\n  keyword?: string;\n  ignoreHiddenColumns?: boolean;\n  debounceTimeout?: number;\n  selector?: (cell: TCell, rowIndex: number, cellIndex: number) =&gt; string;\n  server?: {\n    url?: (prevUrl: string, keyword: string) =&gt; string;\n    body?: (prevBody: BodyInit, keyword: string) =&gt; BodyInit;\n  };\n}\n\nexport function Search() {\n  const [processor, setProcessor] = useState&lt;\n    GlobalSearchFilter | ServerGlobalSearchFilter\n  &gt;(undefined);\n  const config = useConfig();\n  const props = config.search as SearchConfig;\n  const _ = useTranslator();\n  const { dispatch } = useStore();\n  const state = useSelector((state) =&gt; state.search);\n\n  useEffect(() =&gt; {\n    if (!processor) return;\n\n    processor.setProps({\n      keyword: state?.keyword,\n    });\n  }, [state, processor]);\n\n  useEffect(() =&gt; {\n    if (props.server) {\n      setProcessor(\n        new ServerGlobalSearchFilter({\n          keyword: props.keyword,\n          url: props.server.url,\n          body: props.server.body,\n        }),\n      );\n    } else {\n      setProcessor(\n        new GlobalSearchFilter({\n          keyword: props.keyword,\n          columns: config.header &amp;&amp; config.header.columns,\n          ignoreHiddenColumns:\n            props.ignoreHiddenColumns ||\n            props.ignoreHiddenColumns === undefined,\n          selector: props.selector,\n        }),\n      );\n    }\n\n    // initial search\n    if (props.keyword) dispatch(actions.SearchKeyword(props.keyword));\n  }, [props]);\n\n  useEffect(() =&gt; {\n    if (!processor) return undefined;\n\n    config.pipeline.register&lt;object, object&gt;(processor);\n\n    return () =&gt; config.pipeline.unregister&lt;object, object&gt;(processor);\n  }, [config, processor]);\n\n  const debouncedOnInput = useCallback(\n    debounce(\n      (event: JSX.TargetedEvent&lt;HTMLInputElement&gt;) =&gt; {\n        if (event.target instanceof HTMLInputElement) {\n          dispatch(actions.SearchKeyword(event.target.value));\n        }\n      },\n      processor instanceof ServerGlobalSearchFilter\n        ? props.debounceTimeout || 250\n        : 0,\n    ),\n    [props, processor],\n  );\n\n  return (\n    &lt;div className={className(classJoin(&apos;search&apos;, config.className?.search))}&gt;\n      &lt;input\n        type=\&quot;search\&quot;\n        placeholder={_(&apos;search.placeholder&apos;)}\n        aria-label={_(&apos;search.placeholder&apos;)}\n        onInput={debouncedOnInput}\n        className={classJoin(className(&apos;input&apos;), className(&apos;search&apos;, &apos;input&apos;))}\n        defaultValue={state?.keyword || &apos;&apos;}\n      /&gt;\n    &lt;/div&gt;\n  );\n}\n&quot;,&quot;export const debounce = &lt;F extends (...args: any[]) =&gt; any&gt;(\n  func: F,\n  waitFor: number,\n) =&gt; {\n  let timeout;\n\n  return (...args: Parameters&lt;F&gt;): Promise&lt;ReturnType&lt;F&gt;&gt; =&gt;\n    new Promise((resolve) =&gt; {\n      if (timeout) {\n        clearTimeout(timeout);\n      }\n\n      timeout = setTimeout(() =&gt; resolve(func(...args)), waitFor);\n    });\n};\n&quot;,&quot;import Tabular from &apos;../../tabular&apos;;\nimport {\n  PipelineProcessor,\n  PipelineProcessorProps,\n  ProcessorType,\n} from &apos;../processor&apos;;\n\ninterface PaginationLimitProps extends PipelineProcessorProps {\n  page: number;\n  limit: number;\n}\n\nclass PaginationLimit extends PipelineProcessor&lt;Tabular, PaginationLimitProps&gt; {\n  protected validateProps(): void {\n    if (isNaN(Number(this.props.limit)) || isNaN(Number(this.props.page))) {\n      throw Error(&apos;Invalid parameters passed&apos;);\n    }\n  }\n\n  get type(): ProcessorType {\n    return ProcessorType.Limit;\n  }\n\n  protected _process(data: Tabular): Tabular {\n    const page = this.props.page;\n    const start = page * this.props.limit;\n    const end = (page + 1) * this.props.limit;\n\n    return new Tabular(data.rows.slice(start, end));\n  }\n}\n\nexport default PaginationLimit;\n&quot;,&quot;import {\n  PipelineProcessor,\n  PipelineProcessorProps,\n  ProcessorType,\n} from &apos;../processor&apos;;\nimport { ServerStorageOptions } from &apos;../../storage/server&apos;;\n\ninterface ServerPaginationLimitProps extends PipelineProcessorProps {\n  page: number;\n  limit: number;\n  url?: (prevUrl: string, page: number, limit: number) =&gt; string;\n  body?: (prevBody: BodyInit, page: number, limit: number) =&gt; BodyInit;\n}\n\nclass ServerPaginationLimit extends PipelineProcessor&lt;\n  ServerStorageOptions,\n  ServerPaginationLimitProps\n&gt; {\n  get type(): ProcessorType {\n    return ProcessorType.ServerLimit;\n  }\n\n  _process(options?: ServerStorageOptions): ServerStorageOptions {\n    const updates = {};\n\n    if (this.props.url) {\n      updates[&apos;url&apos;] = this.props.url(\n        options.url,\n        this.props.page,\n        this.props.limit,\n      );\n    }\n\n    if (this.props.body) {\n      updates[&apos;body&apos;] = this.props.body(\n        options.body,\n        this.props.page,\n        this.props.limit,\n      );\n    }\n\n    return {\n      ...options,\n      ...updates,\n    };\n  }\n}\n\nexport default ServerPaginationLimit;\n&quot;,&quot;import { h, Fragment } from &apos;preact&apos;;\nimport PaginationLimit from &apos;../../pipeline/limit/pagination&apos;;\nimport { classJoin, className } from &apos;../../util/className&apos;;\nimport ServerPaginationLimit from &apos;../../pipeline/limit/serverPagination&apos;;\nimport { useConfig } from &apos;../../hooks/useConfig&apos;;\nimport { useEffect, useRef, useState } from &apos;preact/hooks&apos;;\nimport { useTranslator } from &apos;../../i18n/language&apos;;\n\nexport interface PaginationConfig {\n  limit?: number;\n  page?: number;\n  summary?: boolean;\n  nextButton?: boolean;\n  prevButton?: boolean;\n  buttonsCount?: number;\n  resetPageOnUpdate?: boolean;\n  server?: {\n    url?: (prevUrl: string, page: number, limit: number) =&gt; string;\n    body?: (prevBody: BodyInit, page: number, limit: number) =&gt; BodyInit;\n  };\n}\n\nexport function Pagination() {\n  const config = useConfig();\n  const {\n    server,\n    summary = true,\n    nextButton = true,\n    prevButton = true,\n    buttonsCount = 3,\n    limit = 10,\n    page = 0,\n    resetPageOnUpdate = true,\n  } = config.pagination as PaginationConfig;\n\n  const processor = useRef&lt;PaginationLimit | ServerPaginationLimit&gt;(null);\n  const [currentPage, setCurrentPage] = useState(page);\n  const [total, setTotal] = useState(0);\n  const _ = useTranslator();\n\n  useEffect(() =&gt; {\n    if (server) {\n      processor.current = new ServerPaginationLimit({\n        limit: limit,\n        page: currentPage,\n        url: server.url,\n        body: server.body,\n      });\n\n      config.pipeline.register(processor.current);\n    } else {\n      processor.current = new PaginationLimit({\n        limit: limit,\n        page: currentPage,\n      });\n\n      config.pipeline.register(processor.current);\n    }\n\n    if (processor.current instanceof ServerPaginationLimit) {\n      config.pipeline.on(&apos;afterProcess&apos;, (tabular) =&gt; setTotal(tabular.length));\n    } else if (processor.current instanceof PaginationLimit) {\n      // Pagination (all Limit processors) is the last step in the pipeline\n      // and we assume that at this stage, we have the rows that we care about.\n      // Let&apos;s grab the rows before processing Pagination and set total number of rows\n      processor.current.on(&apos;beforeProcess&apos;, (tabular) =&gt;\n        setTotal(tabular.length),\n      );\n    }\n\n    config.pipeline.on(&apos;updated&apos;, onUpdate);\n\n    // we need to make sure that the state is set\n    // to the default props when an error happens\n    config.pipeline.on(&apos;error&apos;, () =&gt; {\n      setTotal(0);\n      setCurrentPage(0);\n    });\n\n    return () =&gt; {\n      config.pipeline.unregister&lt;object, object&gt;(processor.current);\n      config.pipeline.off(&apos;updated&apos;, onUpdate);\n    };\n  }, []);\n\n  const onUpdate = (updatedProcessor) =&gt; {\n    // this is to ensure that the current page is set to 0\n    // when a processor is updated for some reason\n    if (resetPageOnUpdate &amp;&amp; updatedProcessor !== processor.current) {\n      setCurrentPage(0);\n\n      if (processor.current.props.page !== 0) {\n        processor.current.setProps({\n          page: 0,\n        });\n      }\n    }\n  };\n\n  const pages = () =&gt; Math.ceil(total / limit);\n\n  const setPage = (page: number) =&gt; {\n    if (page &gt;= pages() || page &lt; 0 || page === currentPage) {\n      return null;\n    }\n\n    setCurrentPage(page);\n\n    processor.current.setProps({\n      page: page,\n    });\n  };\n\n  const renderPages = () =&gt; {\n    if (buttonsCount &lt;= 0) {\n      return null;\n    }\n\n    // how many pagination buttons to render?\n    const maxCount: number = Math.min(pages(), buttonsCount);\n\n    let pagePivot = Math.min(currentPage, Math.floor(maxCount / 2));\n    if (currentPage + Math.floor(maxCount / 2) &gt;= pages()) {\n      pagePivot = maxCount - (pages() - currentPage);\n    }\n\n    return (\n      &lt;Fragment&gt;\n        {pages() &gt; maxCount &amp;&amp; currentPage - pagePivot &gt; 0 &amp;&amp; (\n          &lt;Fragment&gt;\n            &lt;button\n              tabIndex={0}\n              role=\&quot;button\&quot;\n              onClick={() =&gt; setPage(0)}\n              title={_(&apos;pagination.firstPage&apos;)}\n              aria-label={_(&apos;pagination.firstPage&apos;)}\n              className={config.className.paginationButton}\n            &gt;\n              {_(&apos;1&apos;)}\n            &lt;/button&gt;\n            &lt;button\n              tabIndex={-1}\n              className={classJoin(\n                className(&apos;spread&apos;),\n                config.className.paginationButton,\n              )}\n            &gt;\n              ...\n            &lt;/button&gt;\n          &lt;/Fragment&gt;\n        )}\n\n        {Array.from(Array(maxCount).keys())\n          .map((i) =&gt; currentPage + (i - pagePivot))\n          .map((i) =&gt; (\n            &lt;button\n              tabIndex={0}\n              role=\&quot;button\&quot;\n              onClick={() =&gt; setPage(i)}\n              className={classJoin(\n                currentPage === i\n                  ? classJoin(\n                      className(&apos;currentPage&apos;),\n                      config.className.paginationButtonCurrent,\n                    )\n                  : null,\n                config.className.paginationButton,\n              )}\n              title={_(&apos;pagination.page&apos;, i + 1)}\n              aria-label={_(&apos;pagination.page&apos;, i + 1)}\n            &gt;\n              {_(`${i + 1}`)}\n            &lt;/button&gt;\n          ))}\n\n        {pages() &gt; maxCount &amp;&amp; pages() &gt; currentPage + pagePivot + 1 &amp;&amp; (\n          &lt;Fragment&gt;\n            &lt;button\n              tabIndex={-1}\n              className={classJoin(\n                className(&apos;spread&apos;),\n                config.className.paginationButton,\n              )}\n            &gt;\n              ...\n            &lt;/button&gt;\n            &lt;button\n              tabIndex={0}\n              role=\&quot;button\&quot;\n              onClick={() =&gt; setPage(pages() - 1)}\n              title={_(&apos;pagination.page&apos;, pages())}\n              aria-label={_(&apos;pagination.page&apos;, pages())}\n              className={config.className.paginationButton}\n            &gt;\n              {_(`${pages()}`)}\n            &lt;/button&gt;\n          &lt;/Fragment&gt;\n        )}\n      &lt;/Fragment&gt;\n    );\n  };\n\n  const renderSummary = () =&gt; {\n    return (\n      &lt;Fragment&gt;\n        {summary &amp;&amp; total &gt; 0 &amp;&amp; (\n          &lt;div\n            role=\&quot;status\&quot;\n            aria-live=\&quot;polite\&quot;\n            className={classJoin(\n              className(&apos;summary&apos;),\n              config.className.paginationSummary,\n            )}\n            title={_(&apos;pagination.navigate&apos;, currentPage + 1, pages())}\n          &gt;\n            {_(&apos;pagination.showing&apos;)} &lt;b&gt;{_(`${currentPage * limit + 1}`)}&lt;/b&gt;{&apos; &apos;}\n            {_(&apos;pagination.to&apos;)}{&apos; &apos;}\n            &lt;b&gt;{_(`${Math.min((currentPage + 1) * limit, total)}`)}&lt;/b&gt;{&apos; &apos;}\n            {_(&apos;pagination.of&apos;)} &lt;b&gt;{_(`${total}`)}&lt;/b&gt;{&apos; &apos;}\n            {_(&apos;pagination.results&apos;)}\n          &lt;/div&gt;\n        )}\n    </div></div></div></main></body></html>